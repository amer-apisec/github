{
  "swagger" : "2.0",
  "info" : {
    "description" : "Automated API Security",
    "version" : "V1",
    "title" : "APIsec REST API",
    "termsOfService" : "https://www.apisec.ai/terms-and-conditions",
    "contact" : {
      "name" : "Intesar Shannan Mohammed",
      "url" : "https://www.apisec.ai",
      "email" : "info@apisec.ai"
    },
    "license" : { }
  },
  "host" : "developer.apisec.ai",
  "basePath" : "/",
  "tags" : [ {
    "name" : "abac-resource-controller",
    "description" : "Abac Resource Controller"
  }, {
    "name" : "account-controller",
    "description" : "Account Controller"
  }, {
    "name" : "alert-controller",
    "description" : "Alert Controller"
  }, {
    "name" : "api-gateway-controller",
    "description" : "Api Gateway Controller"
  }, {
    "name" : "architecture-view-controller",
    "description" : "Architecture View Controller"
  }, {
    "name" : "assistant-controller",
    "description" : "Assistant Controller"
  }, {
    "name" : "auto-code-generator-controller",
    "description" : "Auto Code Generator Controller"
  }, {
    "name" : "cluster-controller",
    "description" : "Cluster Controller"
  }, {
    "name" : "custom-generator-controller",
    "description" : "Custom Generator Controller"
  }, {
    "name" : "dashboard-controller",
    "description" : "Dashboard Controller"
  }, {
    "name" : "data-record-controller",
    "description" : "Data Record Controller"
  }, {
    "name" : "data-set-controller",
    "description" : "Data Set Controller"
  }, {
    "name" : "default-integration-controller",
    "description" : "Default Integration Controller"
  }, {
    "name" : "endpoint-controller",
    "description" : "Endpoint Controller"
  }, {
    "name" : "environment-controller",
    "description" : "Environment Controller"
  }, {
    "name" : "event-controller",
    "description" : "Event Controller"
  }, {
    "name" : "generator-configuration-controller",
    "description" : "Generator Configuration Controller"
  }, {
    "name" : "issue-controller",
    "description" : "Issue Controller"
  }, {
    "name" : "issue-tracker-controller",
    "description" : "Issue Tracker Controller"
  }, {
    "name" : "job-controller",
    "description" : "Job Controller"
  }, {
    "name" : "notification-controller",
    "description" : "Notification Controller"
  }, {
    "name" : "org-controller",
    "description" : "Org Controller"
  }, {
    "name" : "payload-controller",
    "description" : "Payload Controller"
  }, {
    "name" : "personalized-coverage-controller",
    "description" : "Personalized Coverage Controller"
  }, {
    "name" : "project-controller",
    "description" : "Project Controller"
  }, {
    "name" : "report-setting-controller",
    "description" : "Report Setting Controller"
  }, {
    "name" : "reports-controller",
    "description" : "Reports Controller"
  }, {
    "name" : "resource-definition-controller",
    "description" : "Resource Definition Controller"
  }, {
    "name" : "run-controller",
    "description" : "Run Controller"
  }, {
    "name" : "security-center-controller",
    "description" : "Security Center Controller"
  }, {
    "name" : "skills-controller",
    "description" : "Skills Controller"
  }, {
    "name" : "system-setting-controller",
    "description" : "System Setting Controller"
  }, {
    "name" : "test-suite-controller",
    "description" : "Test Suite Controller"
  }, {
    "name" : "user-variable-controller",
    "description" : "User Variable Controller"
  }, {
    "name" : "users-controller",
    "description" : "Users Controller"
  } ],
  "paths" : {
    "/api/v1/abac" : {
      "post" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AbacResource",
            "originalRef" : "AbacResource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AbacResource",
            "originalRef" : "AbacResource"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/batch" : {
      "post" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dtos",
          "description" : "dtos",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AbacResource",
              "originalRef" : "AbacResource"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/generator/{generatorid}" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "findByGeneratorId",
        "operationId" : "findByGeneratorIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "generatorid",
          "in" : "path",
          "description" : "generatorid",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abac-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbacValidations",
        "operationId" : "recalculateAbacValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abac1positive-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbac1PositiveValidations",
        "operationId" : "recalculateAbac1PositiveValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abac2-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbac2Validations",
        "operationId" : "recalculateAbac2ValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abac2positive-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbac2PositiveValidations",
        "operationId" : "recalculateAbac2PositiveValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abacpositive-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbacPositiveValidations",
        "operationId" : "recalculateAbacPositiveValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abact3-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbac3Validations",
        "operationId" : "recalculateAbac3ValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abact3positive-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbac3PositiveValidations",
        "operationId" : "recalculateAbac3PositiveValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-abact7-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateAbac7Validations",
        "operationId" : "recalculateAbac7ValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/project/{projectId}/add-hijacklevel1-rules" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "recalculateHijackLevel1Validations",
        "operationId" : "recalculateHijackLevel1ValidationsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AbacResource»»",
              "originalRef" : "Response«List«AbacResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/abac/{id}" : {
      "get" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "abac-resource-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AbacResource»",
              "originalRef" : "Response«AbacResource»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/accounts" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        }, {
          "name" : "isDefault",
          "in" : "query",
          "description" : "isDefault",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Account»»",
              "originalRef" : "Response«List«Account»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Account»»",
              "originalRef" : "Response«List«Account»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "account-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_3",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account",
            "originalRef" : "Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/accounts/account-type/{accountType}" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "findByAccountType",
        "operationId" : "findByAccountTypeUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "accountType",
          "in" : "path",
          "description" : "accountType",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Account»»",
              "originalRef" : "Response«List«Account»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Account»»",
              "originalRef" : "Response«List«Account»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/accounts/search" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        }, {
          "name" : "isDefault",
          "in" : "query",
          "description" : "isDefault",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Account»»",
              "originalRef" : "Response«List«Account»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Account»»",
              "originalRef" : "Response«List«Account»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/accounts/wrike-folders" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "validateCreds",
        "operationId" : "validateCredsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "accountId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«IssueTrackerValidationResponse»",
              "originalRef" : "Response«IssueTrackerValidationResponse»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«IssueTrackerValidationResponse»",
              "originalRef" : "Response«IssueTrackerValidationResponse»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/accounts/{id}" : {
      "get" : {
        "tags" : [ "account-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "account-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account",
            "originalRef" : "Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "account-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/alerts" : {
      "get" : {
        "tags" : [ "alert-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Alert»»",
              "originalRef" : "Response«List«Alert»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Alert»»",
              "originalRef" : "Response«List«Alert»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/alerts/ref/{id}" : {
      "get" : {
        "tags" : [ "alert-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Alert»»",
              "originalRef" : "Response«List«Alert»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Alert»»",
              "originalRef" : "Response«List«Alert»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/alerts/{id}" : {
      "get" : {
        "tags" : [ "alert-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Alert»",
              "originalRef" : "Response«Alert»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Alert»",
              "originalRef" : "Response«Alert»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/api-gateway/action/{id}" : {
      "get" : {
        "tags" : [ "api-gateway-controller" ],
        "summary" : "getAction",
        "operationId" : "getActionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "region",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "description" : "action",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bg",
          "in" : "query",
          "description" : "bg",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "string",
          "default" : "10"
        }, {
          "name" : "env",
          "in" : "query",
          "description" : "env",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "pinnedFirst",
          "in" : "query",
          "description" : "pinnedFirst",
          "required" : false,
          "type" : "string",
          "default" : "true"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "name"
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "order",
          "required" : false,
          "type" : "string",
          "default" : "false"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/api-gateway/getall/{id}" : {
      "get" : {
        "tags" : [ "api-gateway-controller" ],
        "summary" : "getApis",
        "operationId" : "getApisUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "region",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "workspaceId",
          "in" : "query",
          "description" : "workspaceId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«APIGatewayTaskResponse»»",
              "originalRef" : "Response«List«APIGatewayTaskResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«APIGatewayTaskResponse»»",
              "originalRef" : "Response«List«APIGatewayTaskResponse»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/api-gateway/test" : {
      "post" : {
        "tags" : [ "api-gateway-controller" ],
        "summary" : "test",
        "operationId" : "testUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account",
            "originalRef" : "Account"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«APIGatewayTaskResponse»»",
              "originalRef" : "Response«List«APIGatewayTaskResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«APIGatewayTaskResponse»»",
              "originalRef" : "Response«List«APIGatewayTaskResponse»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/api-gateway/{accountId}/workspaces" : {
      "get" : {
        "tags" : [ "api-gateway-controller" ],
        "summary" : "getAllWorkspaces",
        "operationId" : "getAllWorkspacesUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "accountId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«APIGatewayTaskResponse»»",
              "originalRef" : "Response«List«APIGatewayTaskResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«APIGatewayTaskResponse»»",
              "originalRef" : "Response«List«APIGatewayTaskResponse»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/architecture-view/project/{id}/coverage" : {
      "get" : {
        "tags" : [ "architecture-view-controller" ],
        "summary" : "getCoverageMatrix",
        "operationId" : "getCoverageMatrixUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«APICoverageMatrix»",
              "originalRef" : "Response«APICoverageMatrix»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«APICoverageMatrix»",
              "originalRef" : "Response«APICoverageMatrix»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/assistant/all" : {
      "get" : {
        "tags" : [ "assistant-controller" ],
        "summary" : "geAllMessagesOfOrg",
        "operationId" : "geAllMessagesOfOrgUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "query",
          "description" : "projectId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AssistantMessage",
                "originalRef" : "AssistantMessage"
              }
            },
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AssistantMessage",
                "originalRef" : "AssistantMessage"
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/autocode-generator" : {
      "get" : {
        "tags" : [ "auto-code-generator-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoCodeGenerator»»",
              "originalRef" : "Response«List«AutoCodeGenerator»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoCodeGenerator»»",
              "originalRef" : "Response«List«AutoCodeGenerator»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "auto-code-generator-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_4",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AutoCodeGenerator",
            "originalRef" : "AutoCodeGenerator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoCodeGenerator»",
              "originalRef" : "Response«AutoCodeGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoCodeGenerator»",
              "originalRef" : "Response«AutoCodeGenerator»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_3",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_6",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Cluster",
            "originalRef" : "Cluster"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/batch" : {
      "post" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_5",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dtos",
          "description" : "dtos",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Cluster",
              "originalRef" : "Cluster"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/byName/{name}" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "findByName",
        "operationId" : "findByNameUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/entitled" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "findEntitled",
        "operationId" : "findEntitledUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/search" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/superAdminView" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "findSuperAdminScanners",
        "operationId" : "findSuperAdminScannersUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/superbotnetwork" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "findSuperBotNetwork",
        "operationId" : "findSuperBotNetworkUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Cluster»»",
              "originalRef" : "Response«List«Cluster»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/{id}" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_4",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_3",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Cluster",
            "originalRef" : "Cluster"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_3",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Cluster»",
              "originalRef" : "Response«Cluster»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/{id}/ping" : {
      "get" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "ping",
        "operationId" : "pingUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«PingInfo»",
              "originalRef" : "Response«PingInfo»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«PingInfo»",
              "originalRef" : "Response«PingInfo»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/bot-clusters/{id}/terminal" : {
      "put" : {
        "tags" : [ "cluster-controller" ],
        "summary" : "runCommand",
        "operationId" : "runCommandUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "command",
          "description" : "command",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/custom-generators" : {
      "get" : {
        "tags" : [ "custom-generator-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_4",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "description" : "scope",
          "required" : false,
          "type" : "string",
          "default" : "PUBLIC"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«CustomGenerator»»",
              "originalRef" : "Response«List«CustomGenerator»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«CustomGenerator»»",
              "originalRef" : "Response«List«CustomGenerator»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "custom-generator-controller" ],
        "summary" : "save",
        "operationId" : "saveUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomGenerator",
            "originalRef" : "CustomGenerator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "custom-generator-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_4",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CustomGenerator",
            "originalRef" : "CustomGenerator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/custom-generators/search/{name}" : {
      "get" : {
        "tags" : [ "custom-generator-controller" ],
        "summary" : "searchByName",
        "operationId" : "searchByNameUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scope",
          "in" : "query",
          "description" : "scope",
          "required" : false,
          "type" : "string",
          "default" : "PUBLIC"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«CustomGenerator»»",
              "originalRef" : "Response«List«CustomGenerator»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«CustomGenerator»»",
              "originalRef" : "Response«List«CustomGenerator»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/custom-generators/{id}" : {
      "get" : {
        "tags" : [ "custom-generator-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_5",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "custom-generator-controller" ],
        "summary" : "deleteById",
        "operationId" : "deleteByIdUsingDELETE",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«CustomGenerator»",
              "originalRef" : "Response«CustomGenerator»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/dashboard/count-auto-suggestions" : {
      "get" : {
        "tags" : [ "dashboard-controller" ],
        "summary" : "getActiveAutoSuggestionsCount",
        "operationId" : "getActiveAutoSuggestionsCountUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/dashboard/count-tests-V2" : {
      "get" : {
        "tags" : [ "dashboard-controller" ],
        "summary" : "countTestsV2",
        "operationId" : "countTestsV2UsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/dashboard/org-stats" : {
      "get" : {
        "tags" : [ "dashboard-controller" ],
        "summary" : "getOrgStats",
        "operationId" : "getOrgStatsUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«OrgStats»",
              "originalRef" : "Response«OrgStats»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«OrgStats»",
              "originalRef" : "Response«OrgStats»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/dashboard/org-stats-v2" : {
      "get" : {
        "tags" : [ "dashboard-controller" ],
        "summary" : "getOrgStatsV2",
        "operationId" : "getOrgStatsV2UsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/default-integration" : {
      "put" : {
        "tags" : [ "default-integration-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_7",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DefaultIntegration",
            "originalRef" : "DefaultIntegration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«DefaultIntegration»",
              "originalRef" : "Response«DefaultIntegration»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«DefaultIntegration»",
              "originalRef" : "Response«DefaultIntegration»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/default-integration/all" : {
      "get" : {
        "tags" : [ "default-integration-controller" ],
        "summary" : "findByOrgId",
        "operationId" : "findByOrgIdUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«DefaultIntegration»»",
              "originalRef" : "Response«List«DefaultIntegration»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«DefaultIntegration»»",
              "originalRef" : "Response«List«DefaultIntegration»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/default-integration/get-by-account-for/{accountFor}" : {
      "get" : {
        "tags" : [ "default-integration-controller" ],
        "summary" : "findByOrgIdAndAccountFOr",
        "operationId" : "findByOrgIdAndAccountFOrUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "accountFor",
          "in" : "path",
          "description" : "accountFor",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«DefaultIntegration»",
              "originalRef" : "Response«DefaultIntegration»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«DefaultIntegration»",
              "originalRef" : "Response«DefaultIntegration»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/default-integration/{id}" : {
      "get" : {
        "tags" : [ "default-integration-controller" ],
        "summary" : "getById",
        "operationId" : "getByIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«DefaultIntegration»",
              "originalRef" : "Response«DefaultIntegration»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«DefaultIntegration»",
              "originalRef" : "Response«DefaultIntegration»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/endpoint" : {
      "post" : {
        "tags" : [ "endpoint-controller" ],
        "summary" : "newApi",
        "operationId" : "newApiUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "endpoint",
          "description" : "endpoint",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Endpoint",
              "originalRef" : "Endpoint"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/endpoint/add-to-spec-file/{id}" : {
      "post" : {
        "tags" : [ "endpoint-controller" ],
        "summary" : "addEndpoints",
        "operationId" : "addEndpointsUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "endpoints",
          "description" : "endpoints",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Endpoint",
              "originalRef" : "Endpoint"
            }
          }
        }, {
          "name" : "scanEndpoints",
          "in" : "query",
          "description" : "scanEndpoints",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/endpoint/project/{id}" : {
      "post" : {
        "tags" : [ "endpoint-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "endpoints",
          "description" : "endpoints",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Endpoint",
              "originalRef" : "Endpoint"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/endpoint/{id}" : {
      "post" : {
        "tags" : [ "endpoint-controller" ],
        "summary" : "newApi",
        "operationId" : "newApiUsingPOST_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "endpoint",
          "description" : "endpoint",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Endpoint",
              "originalRef" : "Endpoint"
            }
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/envs" : {
      "post" : {
        "tags" : [ "environment-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_12",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Environment",
            "originalRef" : "Environment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "environment-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_8",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Environment",
            "originalRef" : "Environment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/envs/projects/{projectId}" : {
      "get" : {
        "tags" : [ "environment-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Environment»»",
              "originalRef" : "Response«List«Environment»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Environment»»",
              "originalRef" : "Response«List«Environment»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/envs/validate/auths" : {
      "post" : {
        "tags" : [ "environment-controller" ],
        "summary" : "validateAuths",
        "operationId" : "validateAuthsUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "environment",
          "description" : "environment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Environment",
            "originalRef" : "Environment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«object»",
              "originalRef" : "Response«object»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«object»",
              "originalRef" : "Response«object»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/envs/{id}" : {
      "get" : {
        "tags" : [ "environment-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_6",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "environment-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_6",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/events/orgevents" : {
      "get" : {
        "tags" : [ "event-controller" ],
        "summary" : "getRecentOrgEvents",
        "operationId" : "getRecentOrgEventsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Event»»",
              "originalRef" : "Response«List«Event»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Event»»",
              "originalRef" : "Response«List«Event»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/events/project/{entityId}/{entityType}" : {
      "get" : {
        "tags" : [ "event-controller" ],
        "summary" : "getProjectEvents",
        "operationId" : "getProjectEventsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "entityId",
          "in" : "path",
          "description" : "entityId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "entityType",
          "in" : "path",
          "description" : "entityType",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Event»",
              "originalRef" : "Response«Event»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Event»",
              "originalRef" : "Response«Event»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/events/projevents/{projectId}" : {
      "get" : {
        "tags" : [ "event-controller" ],
        "summary" : "getRecentOrgEventsByProjectId",
        "operationId" : "getRecentOrgEventsByProjectIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "q",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Activity»»",
              "originalRef" : "Response«List«Activity»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Activity»»",
              "originalRef" : "Response«List«Activity»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/events/search-events" : {
      "get" : {
        "tags" : [ "event-controller" ],
        "summary" : "searchEvents",
        "operationId" : "searchEventsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "eventType",
          "in" : "query",
          "description" : "eventType",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Event»»",
              "originalRef" : "Response«List«Event»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Event»»",
              "originalRef" : "Response«List«Event»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/generator-configuration" : {
      "post" : {
        "tags" : [ "generator-configuration-controller" ],
        "summary" : "save",
        "operationId" : "saveUsingPOST_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectConfiguration",
            "originalRef" : "ProjectConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ProjectConfiguration»",
              "originalRef" : "Response«ProjectConfiguration»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ProjectConfiguration»",
              "originalRef" : "Response«ProjectConfiguration»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/generator-configuration/{projectid}/generator/{generatorType}" : {
      "get" : {
        "tags" : [ "generator-configuration-controller" ],
        "summary" : "findByIdProjectIdAndGeneratorType",
        "operationId" : "findByIdProjectIdAndGeneratorTypeUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectid",
          "in" : "path",
          "description" : "projectid",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "generatorType",
          "in" : "path",
          "description" : "generatorType",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ProjectConfiguration»",
              "originalRef" : "Response«ProjectConfiguration»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ProjectConfiguration»",
              "originalRef" : "Response«ProjectConfiguration»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/issues/project-id/{projectId}/issue-id/{id}" : {
      "get" : {
        "tags" : [ "issue-controller" ],
        "summary" : "getComments",
        "operationId" : "getCommentsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ITCommentsTaskResponse»",
              "originalRef" : "Response«ITCommentsTaskResponse»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ITCommentsTaskResponse»",
              "originalRef" : "Response«ITCommentsTaskResponse»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "issue-controller" ],
        "summary" : "postComment",
        "operationId" : "postCommentUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "commentBody",
          "description" : "commentBody",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ITCommentsTaskResponse»",
              "originalRef" : "Response«ITCommentsTaskResponse»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ITCommentsTaskResponse»",
              "originalRef" : "Response«ITCommentsTaskResponse»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs" : {
      "get" : {
        "tags" : [ "job-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_8",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Job»»",
              "originalRef" : "Response«List«Job»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Job»»",
              "originalRef" : "Response«List«Job»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "job-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_14",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Job",
            "originalRef" : "Job"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "job-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_11",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Job",
            "originalRef" : "Job"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs/playbooks-graph/{id}" : {
      "get" : {
        "tags" : [ "job-controller" ],
        "summary" : "getPlaybooksGraphCount",
        "operationId" : "getPlaybooksGraphCountUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«PlaybooksGraph»»",
              "originalRef" : "Response«List«PlaybooksGraph»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«PlaybooksGraph»»",
              "originalRef" : "Response«List«PlaybooksGraph»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs/project-id/{id}" : {
      "get" : {
        "tags" : [ "job-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_4",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "modifiedDate,createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Job»»",
              "originalRef" : "Response«List«Job»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Job»»",
              "originalRef" : "Response«List«Job»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs/project-id/{id}/no-issues" : {
      "get" : {
        "tags" : [ "job-controller" ],
        "summary" : "findByProjectIdAndNoIssues",
        "operationId" : "findByProjectIdAndNoIssuesUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Job»»",
              "originalRef" : "Response«List«Job»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Job»»",
              "originalRef" : "Response«List«Job»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs/validate-creds" : {
      "post" : {
        "tags" : [ "job-controller" ],
        "summary" : "validateCreds",
        "operationId" : "validateCredsUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Job",
            "originalRef" : "Job"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Account»",
              "originalRef" : "Response«Account»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs/{id}" : {
      "get" : {
        "tags" : [ "job-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_8",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "job-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_7",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Job»",
              "originalRef" : "Response«Job»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/jobs/{id}/clear-all-suggestions" : {
      "get" : {
        "tags" : [ "job-controller" ],
        "summary" : "clearAll",
        "operationId" : "clearAllUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_10",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Org»»",
              "originalRef" : "Response«List«Org»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Org»»",
              "originalRef" : "Response«List«Org»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_17",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Org",
            "originalRef" : "Org"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/by-user" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUsers",
        "operationId" : "findOrgUsersUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/login-status" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "login",
        "operationId" : "loginUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«OrgUsers»",
              "originalRef" : "Response«OrgUsers»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«OrgUsers»",
              "originalRef" : "Response«OrgUsers»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/mfa-status" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "checkMfaStatus",
        "operationId" : "checkMfaStatusUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«MFAStatus»",
              "originalRef" : "Response«MFAStatus»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«MFAStatus»",
              "originalRef" : "Response«MFAStatus»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/org-tag/{orgTag}" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgsByTag",
        "operationId" : "findOrgsByTagUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgTag",
          "in" : "path",
          "description" : "orgTag",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Org»»",
              "originalRef" : "Response«List«Org»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Org»»",
              "originalRef" : "Response«List«Org»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/org-user/search" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "searchOrgUsers",
        "operationId" : "searchOrgUsersUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "users.name"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/search" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET_2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Org»»",
              "originalRef" : "Response«List«Org»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Org»»",
              "originalRef" : "Response«List«Org»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/user-orgs/access" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findUserOrgs",
        "operationId" : "findUserOrgsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "users.name"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/users/addMemberToOrg" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "addMemberToOrg",
        "operationId" : "addMemberToOrgUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "member",
          "description" : "member",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member",
            "originalRef" : "Member"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/users/removeMemberFromOrg" : {
      "delete" : {
        "tags" : [ "org-controller" ],
        "summary" : "removeMemberFromOrg",
        "operationId" : "removeMemberFromOrgUsingDELETE",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "description" : "email",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{id}" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_10",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "org-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_13",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Org",
            "originalRef" : "Org"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "org-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_9",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{id}/activeUsers" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findActiveOrgUsersById",
        "operationId" : "findActiveOrgUsersByIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{id}/archive" : {
      "put" : {
        "tags" : [ "org-controller" ],
        "summary" : "archive",
        "operationId" : "archiveUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{id}/update" : {
      "put" : {
        "tags" : [ "org-controller" ],
        "summary" : "updateOrg",
        "operationId" : "updateOrgUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Org",
            "originalRef" : "Org"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{id}/users" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUsersById",
        "operationId" : "findOrgUsersByIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«OrgUsers»»",
              "originalRef" : "Response«List«OrgUsers»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{orgId}/org-user/{orgUserId}" : {
      "get" : {
        "tags" : [ "org-controller" ],
        "summary" : "findOrgUserById",
        "operationId" : "findOrgUserByIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orgUserId",
          "in" : "path",
          "description" : "orgUserId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«OrgUsers»",
              "originalRef" : "Response«OrgUsers»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«OrgUsers»",
              "originalRef" : "Response«OrgUsers»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{orgId}/users/add-member" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "addMember",
        "operationId" : "addMemberUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "member",
          "description" : "member",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member",
            "originalRef" : "Member"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{orgId}/users/add-members" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "addMembers",
        "operationId" : "addMembersUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "members",
          "description" : "members",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Member",
              "originalRef" : "Member"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{orgId}/users/{userId}" : {
      "put" : {
        "tags" : [ "org-controller" ],
        "summary" : "updateOrgUser",
        "operationId" : "updateOrgUserUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "userId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OrgUsers",
            "originalRef" : "OrgUsers"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{orgId}/users/{userId}/reset-my-password" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "resetMyPassword",
        "operationId" : "resetMyPasswordUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "userId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "member",
          "description" : "member",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member",
            "originalRef" : "Member"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/orgs/{orgId}/users/{userId}/reset-password" : {
      "post" : {
        "tags" : [ "org-controller" ],
        "summary" : "resetPassword",
        "operationId" : "resetPasswordUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "userId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "member",
          "description" : "member",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Member",
            "originalRef" : "Member"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/payloads" : {
      "post" : {
        "tags" : [ "payload-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_18",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Payload",
            "originalRef" : "Payload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/payloads/project/{projectId}" : {
      "get" : {
        "tags" : [ "payload-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_11",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Payload»»",
              "originalRef" : "Response«List«Payload»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Payload»»",
              "originalRef" : "Response«List«Payload»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "payload-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_14",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Payload",
            "originalRef" : "Payload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/payloads/project/{projectId}/{categoryGroup}" : {
      "get" : {
        "tags" : [ "payload-controller" ],
        "summary" : "getEndpoints",
        "operationId" : "getEndpointsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "categoryGroup",
          "in" : "path",
          "description" : "categoryGroup",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Payload»»",
              "originalRef" : "Response«List«Payload»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Payload»»",
              "originalRef" : "Response«List«Payload»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/payloads/{id}" : {
      "get" : {
        "tags" : [ "payload-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_11",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "payload-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_10",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Payload»",
              "originalRef" : "Response«Payload»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_12",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Project»»",
              "originalRef" : "Response«List«Project»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Project»»",
              "originalRef" : "Response«List«Project»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_2",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Project",
            "originalRef" : "Project"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/addall" : {
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "addAll",
        "operationId" : "addAllUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Project",
              "originalRef" : "Project"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/all" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findAllProjects",
        "operationId" : "findAllProjectsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ProjectStats»»",
              "originalRef" : "Response«List«ProjectStats»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ProjectStats»»",
              "originalRef" : "Response«List«ProjectStats»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/all-project-names" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findAllProjectName",
        "operationId" : "findAllProjectNameUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«string»»",
              "originalRef" : "Response«List«string»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«string»»",
              "originalRef" : "Response«List«string»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/auto-suggestions/{id}/compliance/{action}/{suiteName}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "updateCompliant",
        "operationId" : "updateCompliantUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suiteName",
          "in" : "path",
          "description" : "suiteName",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "action",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/auto-suggestions/{id}/unsecured/{action}/{suiteName}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "updateAccessOfUnsecureEndpoint",
        "operationId" : "updateAccessOfUnsecureEndpointUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suiteName",
          "in" : "path",
          "description" : "suiteName",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "action",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "comment",
          "in" : "query",
          "description" : "comment",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/get-logs/{runID}/{suiteName}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getLogsbyRunIdSuiteName",
        "operationId" : "getLogsbyRunIdSuiteNameUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "runID",
          "in" : "path",
          "description" : "runID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suiteName",
          "in" : "path",
          "description" : "suiteName",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuiteResponse»",
              "originalRef" : "Response«TestSuiteResponse»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuiteResponse»",
              "originalRef" : "Response«TestSuiteResponse»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/mssp/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findAllLabProjects",
        "operationId" : "findAllLabProjectsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "orgId",
          "in" : "query",
          "description" : "orgId",
          "required" : false,
          "type" : "string",
          "default" : "%"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/myProjects" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findMyProjects",
        "operationId" : "findMyProjectsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Project»»",
              "originalRef" : "Response«List«Project»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Project»»",
              "originalRef" : "Response«List«Project»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/oas-editor" : {
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "addEndpoints",
        "operationId" : "addEndpointsUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Project",
            "originalRef" : "Project"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/org/auto-suggestions" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getOrgAutoSuggestions",
        "operationId" : "getOrgAutoSuggestionsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "severity",
          "in" : "query",
          "description" : "severity",
          "required" : false,
          "type" : "string",
          "default" : "Critical"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "severity"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "ASC",
          "enum" : [ "ASC", "DESC" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionMinimal»»",
              "originalRef" : "Response«List«AutoSuggestionMinimal»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionMinimal»»",
              "originalRef" : "Response«List«AutoSuggestionMinimal»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/orgs/{orgId}/subscriptionLicense" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getSubscriptionTier",
        "operationId" : "getSubscriptionTierUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Org»",
              "originalRef" : "Response«Org»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/search" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET_3",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "tag",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectEnable",
          "in" : "query",
          "description" : "projectEnable",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Project»»",
              "originalRef" : "Response«List«Project»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Project»»",
              "originalRef" : "Response«List«Project»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_13",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_16",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Project",
            "originalRef" : "Project"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "project-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_12",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/archive" : {
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "archive",
        "operationId" : "archiveUsingPUT_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/archive-all-suggestions/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "archiveAllSuggestions",
        "operationId" : "archiveAllSuggestionsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/archive-suggestion/{suggestion-id}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "archiveSuggestion",
        "operationId" : "archiveSuggestionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suggestion-id",
          "in" : "path",
          "description" : "suggestion-id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/archive-suggestions-by-category/{status}" : {
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "archiveSuggestionsByCategory",
        "operationId" : "archiveSuggestionsByCategoryUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "categories",
          "description" : "categories",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/auto-suggestions-download/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getAutoSuggestionsForDownload",
        "operationId" : "getAutoSuggestionsForDownloadUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "severity",
          "in" : "query",
          "description" : "severity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/auto-suggestions/activate/{suiteName}/{tcNumber}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "activateAutoSuggestion",
        "operationId" : "activateAutoSuggestionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suiteName",
          "in" : "path",
          "description" : "suiteName",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tcNumber",
          "in" : "path",
          "description" : "tcNumber",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/auto-suggestions/category-counts/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getAutoSuggestionsCountsByCategory",
        "operationId" : "getAutoSuggestionsCountsByCategoryUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«SuggestionCounts»»",
              "originalRef" : "Response«List«SuggestionCounts»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«SuggestionCounts»»",
              "originalRef" : "Response«List«SuggestionCounts»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/auto-suggestions/skip/{suiteName}/{tcNumber}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "skipAutoSuggestion",
        "operationId" : "skipAutoSuggestionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suiteName",
          "in" : "path",
          "description" : "suiteName",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tcNumber",
          "in" : "path",
          "description" : "tcNumber",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rbacAction",
          "in" : "query",
          "description" : "rbacAction",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/auto-suggestions/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getAutoSuggestions",
        "operationId" : "getAutoSuggestionsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "severity",
          "in" : "query",
          "description" : "severity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/auto-suggestionsV2/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getAutoSuggestionsV2",
        "operationId" : "getAutoSuggestionsV2UsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "severity",
          "in" : "query",
          "description" : "severity",
          "required" : false,
          "type" : "string",
          "default" : "%%"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : false,
          "type" : "string",
          "default" : "%%"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string",
          "default" : "%%"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "type" : "object"
                }
              }
            },
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "array",
                "items" : {
                  "type" : "object"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/bounty-value" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "bounty",
        "operationId" : "bountyUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/close-all-suggestions" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "closeAllSuggestions",
        "operationId" : "closeAllSuggestionsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/close-suggestion/{suggestion-id}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "closeSuggestion",
        "operationId" : "closeSuggestionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suggestion-id",
          "in" : "path",
          "description" : "suggestion-id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/close-suggestions-by-category/{status}" : {
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "closeSuggestionsByCategory",
        "operationId" : "closeSuggestionsByCategoryUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "categories",
          "description" : "categories",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/compare-specs" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "compareSpecs",
        "operationId" : "compareSpecsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«JSONDiff»",
              "originalRef" : "Response«JSONDiff»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«JSONDiff»",
              "originalRef" : "Response«JSONDiff»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/count-archived-auto-suggestions/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getArchivedAutoSuggestionsCount",
        "operationId" : "getArchivedAutoSuggestionsCountUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/dashboard/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "dashboard",
        "operationId" : "dashboardUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Dashboard»",
              "originalRef" : "Response«Dashboard»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Dashboard»",
              "originalRef" : "Response«Dashboard»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/dashboardV2/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "dashboardV2",
        "operationId" : "dashboardV2UsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Dashboard»",
              "originalRef" : "Response«Dashboard»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Dashboard»",
              "originalRef" : "Response«Dashboard»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/deactivate-all-suggestions" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "deactivateAllSuggestions",
        "operationId" : "deactivateAllSuggestionsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/endpoint-resource" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getEndpointsResource",
        "operationId" : "getEndpointsResourceUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«EndpointResource»»",
              "originalRef" : "Response«List«EndpointResource»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«EndpointResource»»",
              "originalRef" : "Response«List«EndpointResource»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/endpoints" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getEndpoints",
        "operationId" : "getEndpointsUsingGET_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Endpoint»»",
              "originalRef" : "Response«List«Endpoint»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Endpoint»»",
              "originalRef" : "Response«List«Endpoint»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/false-positive-negative-count" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getFalsePositiveNegativeCount",
        "operationId" : "getFalsePositiveNegativeCountUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«FalsePostiveNegativeStats»",
              "originalRef" : "Response«FalsePostiveNegativeStats»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«FalsePostiveNegativeStats»",
              "originalRef" : "Response«FalsePostiveNegativeStats»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/files" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_6",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ProjectFile»»",
              "originalRef" : "Response«List«ProjectFile»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ProjectFile»»",
              "originalRef" : "Response«List«ProjectFile»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/get-logs/{issueId}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getLogsbyIssueId",
        "operationId" : "getLogsbyIssueIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "issueId",
          "in" : "path",
          "description" : "issueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuiteResponse»",
              "originalRef" : "Response«TestSuiteResponse»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuiteResponse»",
              "originalRef" : "Response«TestSuiteResponse»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/get-nonOAS-spec" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getNonOASSpec",
        "operationId" : "getNonOASSpecUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ProjectSpec»",
              "originalRef" : "Response«ProjectSpec»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ProjectSpec»",
              "originalRef" : "Response«ProjectSpec»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/get-spec" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getSpec",
        "operationId" : "getSpecUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ProjectSpec»",
              "originalRef" : "Response«ProjectSpec»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ProjectSpec»",
              "originalRef" : "Response«ProjectSpec»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/getstats" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getMonthlyStats",
        "operationId" : "getMonthlyStatsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Stats»",
              "originalRef" : "Response«Stats»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Stats»",
              "originalRef" : "Response«Stats»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/project-sync" : {
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "sync",
        "operationId" : "syncUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectSync",
            "originalRef" : "ProjectSync"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/refresh-specs" : {
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "refreshSpecs",
        "operationId" : "refreshSpecsUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Project",
            "originalRef" : "Project"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Project»",
              "originalRef" : "Response«Project»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/reopen-suggestion/{suggestion-id}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "reOpenSuggestion",
        "operationId" : "reOpenSuggestionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "suggestion-id",
          "in" : "path",
          "description" : "suggestion-id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/resource-definitions" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getResourceDefinitions",
        "operationId" : "getResourceDefinitionsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/review-auto-suggestion" : {
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "reviewAutoSuggestion",
        "operationId" : "reviewAutoSuggestionUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "autoSuggestion",
          "description" : "autoSuggestion",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AutoSuggestion",
            "originalRef" : "AutoSuggestion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoSuggestion»",
              "originalRef" : "Response«AutoSuggestion»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoSuggestion»",
              "originalRef" : "Response«AutoSuggestion»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/search-auto-suggestions/search/{status}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET_4",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "severity",
          "in" : "query",
          "description" : "severity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/spec-analysis" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "specAnalysis",
        "operationId" : "specAnalysisUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "type" : "string"
            },
            "schema" : {
              "type" : "string"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/specs-version-graph" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "specVersionGraph",
        "operationId" : "specVersionGraphUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 7,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ProjectSpec»»",
              "originalRef" : "Response«List«ProjectSpec»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ProjectSpec»»",
              "originalRef" : "Response«List«ProjectSpec»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/sync-all" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "syncAll",
        "operationId" : "syncAllUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/update-auto-suggestion" : {
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "updateAutoSuggestion",
        "operationId" : "updateAutoSuggestionUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "autoSuggestion",
          "description" : "autoSuggestion",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AutoSuggestion",
            "originalRef" : "AutoSuggestion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoSuggestion»",
              "originalRef" : "Response«AutoSuggestion»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoSuggestion»",
              "originalRef" : "Response«AutoSuggestion»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/upgradeLicense" : {
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "upgradeLicense",
        "operationId" : "upgradeLicenseUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«SubscriptionTier»",
              "originalRef" : "Response«SubscriptionTier»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«SubscriptionTier»",
              "originalRef" : "Response«SubscriptionTier»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/vulgraph-snapshot" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "vulGraphSnapShot",
        "operationId" : "vulGraphSnapShotUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionCountSnapshot»»",
              "originalRef" : "Response«List«AutoSuggestionCountSnapshot»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionCountSnapshot»»",
              "originalRef" : "Response«List«AutoSuggestionCountSnapshot»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/vulgraph-snapshot-V2" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "vulGraphSnapShotV2",
        "operationId" : "vulGraphSnapShotV2UsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionCountSnapshot»»",
              "originalRef" : "Response«List«AutoSuggestionCountSnapshot»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionCountSnapshot»»",
              "originalRef" : "Response«List«AutoSuggestionCountSnapshot»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{id}/vulnerability-by-severity" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getVulnerabilityBySeverity",
        "operationId" : "getVulnerabilityBySeverityUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«VulnerabilityBySeverity»",
              "originalRef" : "Response«VulnerabilityBySeverity»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«VulnerabilityBySeverity»",
              "originalRef" : "Response«VulnerabilityBySeverity»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{orgId}/org-auto-suggestions-download" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getOrgAutoSuggestionsForDownload",
        "operationId" : "getOrgAutoSuggestionsForDownloadUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "path",
          "description" : "orgId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fetchAll",
          "in" : "query",
          "description" : "fetchAll",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "severity",
          "in" : "query",
          "description" : "severity",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "severity"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestion»»",
              "originalRef" : "Response«List«AutoSuggestion»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/GenType/{type}/Sync" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "syncAutoCodeGeneratorByType",
        "operationId" : "syncAutoCodeGeneratorByTypeUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "path",
          "description" : "type",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoCodeGenerator»",
              "originalRef" : "Response«AutoCodeGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoCodeGenerator»",
              "originalRef" : "Response«AutoCodeGenerator»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/auto-suggestion-category/{autoSuggestionId}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getCategory",
        "operationId" : "getCategoryUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "autoSuggestionId",
          "in" : "path",
          "description" : "autoSuggestionId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoCodeGenerator»",
              "originalRef" : "Response«AutoCodeGenerator»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoCodeGenerator»",
              "originalRef" : "Response«AutoCodeGenerator»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/auto-suggestion/{autoSuggestionId}" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getAutoSuggestion",
        "operationId" : "getAutoSuggestionUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "autoSuggestionId",
          "in" : "path",
          "description" : "autoSuggestionId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoSuggestion»",
              "originalRef" : "Response«AutoSuggestion»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoSuggestion»",
              "originalRef" : "Response«AutoSuggestion»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/autocodeconfig" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getCodeConfigSave",
        "operationId" : "getCodeConfigSaveUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«AutoCodeConfig»",
              "originalRef" : "Response«AutoCodeConfig»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«AutoCodeConfig»",
              "originalRef" : "Response«AutoCodeConfig»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/env" : {
      "get" : {
        "tags" : [ "project-controller" ],
        "summary" : "getEnvs",
        "operationId" : "getEnvsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Environment»»",
              "originalRef" : "Response«List«Environment»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Environment»»",
              "originalRef" : "Response«List«Environment»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "addEnv",
        "operationId" : "addEnvUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Environment",
            "originalRef" : "Environment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/env/{envId}" : {
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "cloneEnv",
        "operationId" : "cloneEnvUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "path",
          "description" : "envId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "project-controller" ],
        "summary" : "saveEnv",
        "operationId" : "saveEnvUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "path",
          "description" : "envId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Environment",
            "originalRef" : "Environment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "project-controller" ],
        "summary" : "deleteEnv",
        "operationId" : "deleteEnvUsingDELETE",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "path",
          "description" : "envId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Environment»",
              "originalRef" : "Response«Environment»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/projects/{projectId}/envs" : {
      "post" : {
        "tags" : [ "project-controller" ],
        "summary" : "saveEnvs",
        "operationId" : "saveEnvsUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Environment",
              "originalRef" : "Environment"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Environment»»",
              "originalRef" : "Response«List«Environment»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Environment»»",
              "originalRef" : "Response«List«Environment»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/report-setting" : {
      "post" : {
        "tags" : [ "report-setting-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_3",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReportSetting",
            "originalRef" : "ReportSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ReportSetting»",
              "originalRef" : "Response«ReportSetting»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ReportSetting»",
              "originalRef" : "Response«ReportSetting»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/report-setting/project/{id}" : {
      "get" : {
        "tags" : [ "report-setting-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_14",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ReportSetting»",
              "originalRef" : "Response«ReportSetting»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ReportSetting»",
              "originalRef" : "Response«ReportSetting»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/reports/project/{projectId}/run/{runId}/{reportType}" : {
      "get" : {
        "tags" : [ "reports-controller" ],
        "summary" : "getRunReport",
        "operationId" : "getRunReportUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "runId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportType",
          "in" : "path",
          "description" : "reportType",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportFileType",
          "in" : "query",
          "description" : "reportFileType",
          "required" : false,
          "type" : "string",
          "default" : "PDF"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/reports/project/{projectId}/{reportType}" : {
      "get" : {
        "tags" : [ "reports-controller" ],
        "summary" : "getProjectReport",
        "operationId" : "getProjectReportUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportType",
          "in" : "path",
          "description" : "reportType",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportFileType",
          "in" : "query",
          "description" : "reportFileType",
          "required" : false,
          "type" : "string",
          "default" : "PDF"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "email",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«string»",
              "originalRef" : "Response«string»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/reports/{id}/vulnerability-by-Endpoint" : {
      "get" : {
        "tags" : [ "reports-controller" ],
        "summary" : "getVulnerabilityByEndpoint",
        "operationId" : "getVulnerabilityByEndpointUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«VulnerableEndpoint»»",
              "originalRef" : "Response«List«VulnerableEndpoint»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«VulnerableEndpoint»»",
              "originalRef" : "Response«List«VulnerableEndpoint»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/reports/{projectId}" : {
      "get" : {
        "tags" : [ "reports-controller" ],
        "summary" : "getAutoSuggestionReport",
        "operationId" : "getAutoSuggestionReportUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "envId",
          "in" : "query",
          "description" : "envId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionReport»»",
              "originalRef" : "Response«List«AutoSuggestionReport»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«AutoSuggestionReport»»",
              "originalRef" : "Response«List«AutoSuggestionReport»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/resources/org/endpoint" : {
      "get" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "getOrgEndpoints",
        "operationId" : "getOrgEndpointsUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/resources/project/{projectId}" : {
      "get" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_13",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_17",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ResourceDefinition",
            "originalRef" : "ResourceDefinition"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«ResourceDefinition»",
              "originalRef" : "Response«ResourceDefinition»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«ResourceDefinition»",
              "originalRef" : "Response«ResourceDefinition»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/resources/project/{projectId}/abac3" : {
      "get" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "findResourceNameByProjectId",
        "operationId" : "findResourceNameByProjectIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«string»»",
              "originalRef" : "Response«List«string»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«string»»",
              "originalRef" : "Response«List«string»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/resources/project/{projectId}/batch" : {
      "put" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "updateBatch",
        "operationId" : "updateBatchUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dtos",
          "description" : "dtos",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResourceDefinition",
              "originalRef" : "ResourceDefinition"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/resources/project/{projectId}/endpoint" : {
      "get" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "getEndpoint",
        "operationId" : "getEndpointUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/resources/project/{projectId}/endpoints" : {
      "get" : {
        "tags" : [ "resource-definition-controller" ],
        "summary" : "getEndpoints",
        "operationId" : "getEndpointsUsingGET_2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«ResourceDefinition»»",
              "originalRef" : "Response«List«ResourceDefinition»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/job/mssp/{status}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findAllActiveJobs",
        "operationId" : "findAllActiveJobsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "path",
          "description" : "status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Array«object»»»",
              "originalRef" : "Response«List«Array«object»»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/job/{id}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findByJobId",
        "operationId" : "findByJobIdUsingGET_1",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Run»»",
              "originalRef" : "Response«List«Run»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Run»»",
              "originalRef" : "Response«List«Run»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "run-controller" ],
        "summary" : "run",
        "operationId" : "runUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "paths",
          "description" : "paths",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "region",
          "in" : "query",
          "description" : "region",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "tags",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "env",
          "in" : "query",
          "description" : "env",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "suites",
          "in" : "query",
          "description" : "suites",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "categories",
          "in" : "query",
          "description" : "categories",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endpoints",
          "in" : "query",
          "description" : "endpoints",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "emailReport",
          "in" : "query",
          "description" : "emailReport",
          "required" : false,
          "type" : "string",
          "default" : "false"
        }, {
          "name" : "reportType",
          "in" : "query",
          "description" : "reportType",
          "required" : false,
          "type" : "string",
          "default" : "RUN_SUMMARY"
        }, {
          "name" : "projectId",
          "in" : "query",
          "description" : "projectId",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/job/{id}/latest" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findLatestByJobId",
        "operationId" : "findLatestByJobIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/job/{id}/runNo/{runNo}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findByRunNumber",
        "operationId" : "findByRunNumberUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runNo",
          "in" : "path",
          "description" : "runNo",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "nav",
          "in" : "query",
          "description" : "nav",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/job/{jobId}/rerun/{runId}" : {
      "post" : {
        "tags" : [ "run-controller" ],
        "summary" : "reRun",
        "operationId" : "reRunUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "jobId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "runId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/job/{jobId}/run/{runId}" : {
      "delete" : {
        "tags" : [ "run-controller" ],
        "summary" : "deleteRun",
        "operationId" : "deleteRunUsingDELETE",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "jobId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "runId",
          "in" : "path",
          "description" : "runId",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/project/{id}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_8",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Run»»",
              "originalRef" : "Response«List«Run»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Run»»",
              "originalRef" : "Response«List«Run»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/project/{id}/latest" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_7",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/stoprun/{id}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "stopRun",
        "operationId" : "stopRunUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/testsuite" : {
      "put" : {
        "tags" : [ "run-controller" ],
        "summary" : "runTesSuite",
        "operationId" : "runTesSuiteUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "region",
          "in" : "query",
          "description" : "region",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "env",
          "in" : "query",
          "description" : "env",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findByRunId",
        "operationId" : "findByRunIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "run-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_14",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Run»",
              "originalRef" : "Response«Run»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/count" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "getRunsCountByProjectId",
        "operationId" : "getRunsCountByProjectIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/run-result-stats" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "getRunResultStats",
        "operationId" : "getRunResultStatsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«RunResultStats»",
              "originalRef" : "Response«RunResultStats»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«RunResultStats»",
              "originalRef" : "Response«RunResultStats»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/test-suite-count" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findSuiteCountByRunId",
        "operationId" : "findSuiteCountByRunIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/test-suite-response/{name}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findBySuiteId",
        "operationId" : "findBySuiteIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/test-suite-responses" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findResponsesByRunId",
        "operationId" : "findResponsesByRunIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/test-suite-summary" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findSuiteSummaryByRunId",
        "operationId" : "findSuiteSummaryByRunIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : true,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "sortName",
          "in" : "query",
          "description" : "sortName",
          "required" : false,
          "type" : "string",
          "default" : "failed"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Suite»»",
              "originalRef" : "Response«List«Suite»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Suite»»",
              "originalRef" : "Response«List«Suite»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{id}/test-suite-summary/search" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET_5",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fpfn",
          "in" : "query",
          "description" : "fpfn",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Suite»»",
              "originalRef" : "Response«List«Suite»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Suite»»",
              "originalRef" : "Response«List«Suite»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/runs/{jobId}/testSuite/test-suite-responses/{name}" : {
      "get" : {
        "tags" : [ "run-controller" ],
        "summary" : "findResponsesByTestSuite",
        "operationId" : "findResponsesByTestSuiteUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "jobId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "path",
          "description" : "name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteResponse»»",
              "originalRef" : "Response«List«TestSuiteResponse»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/securitycenter/autosuggestion-by-severity" : {
      "get" : {
        "tags" : [ "security-center-controller" ],
        "summary" : "getAutoSuggestionCountBySeverity",
        "operationId" : "getAutoSuggestionCountBySeverityUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«VulnerabilitiesBySeverity»»",
              "originalRef" : "Response«List«VulnerabilitiesBySeverity»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«VulnerabilitiesBySeverity»»",
              "originalRef" : "Response«List«VulnerabilitiesBySeverity»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/securitycenter/owasp-top10-vulcount" : {
      "get" : {
        "tags" : [ "security-center-controller" ],
        "summary" : "getOWASPTop10Vul",
        "operationId" : "getOWASPTop10VulUsingGET",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«long»",
              "originalRef" : "Response«long»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/skills" : {
      "get" : {
        "tags" : [ "skills-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_14",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Skill»»",
              "originalRef" : "Response«List«Skill»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Skill»»",
              "originalRef" : "Response«List«Skill»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "skills-controller" ],
        "summary" : "add",
        "operationId" : "addUsingPOST_4",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "request",
          "description" : "request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Skill",
            "originalRef" : "Skill"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "skills-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_18",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Skill",
            "originalRef" : "Skill"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/skills/type/{type}" : {
      "get" : {
        "tags" : [ "skills-controller" ],
        "summary" : "findByType",
        "operationId" : "findByTypeUsingGET_2",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "description" : "type",
          "required" : true,
          "type" : "string",
          "enum" : [ "VERSION_CONTROL", "BOT_DEPLOYMENT", "ISSUE_TRACKER", "NOTIFICATION", "ANALYTICS" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«Skill»»",
              "originalRef" : "Response«List«Skill»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«Skill»»",
              "originalRef" : "Response«List«Skill»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/skills/{id}" : {
      "get" : {
        "tags" : [ "skills-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_16",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "skills-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_15",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Skill»",
              "originalRef" : "Response«Skill»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/system-settings" : {
      "get" : {
        "tags" : [ "system-setting-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_15",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«SystemSetting»»",
              "originalRef" : "Response«List«SystemSetting»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«SystemSetting»»",
              "originalRef" : "Response«List«SystemSetting»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "system-setting-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_19",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SystemSetting",
            "originalRef" : "SystemSetting"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«SystemSetting»",
              "originalRef" : "Response«SystemSetting»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«SystemSetting»",
              "originalRef" : "Response«SystemSetting»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/system-settings/save" : {
      "post" : {
        "tags" : [ "system-setting-controller" ],
        "summary" : "saveAll",
        "operationId" : "saveAllUsingPOST_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dtos",
          "description" : "dtos",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SystemSetting",
              "originalRef" : "SystemSetting"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/system-settings/{id}" : {
      "get" : {
        "tags" : [ "system-setting-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_17",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«SystemSetting»",
              "originalRef" : "Response«SystemSetting»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«SystemSetting»",
              "originalRef" : "Response«SystemSetting»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_17",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "put" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPUT_20",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/deletedtestsuites" : {
      "put" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "deleteTestSuite",
        "operationId" : "deleteTestSuiteUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dtos",
          "description" : "dtos",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuitesDeletedDto",
            "originalRef" : "TestSuitesDeletedDto"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_9",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}/auto-generated-wise" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "getAutoGeneratedWise",
        "operationId" : "getAutoGeneratedWiseUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}/category-wise" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "getCategoryWise",
        "operationId" : "getCategoryWiseUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}/category-wise-with-tags" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "getCategoryWiseWithTags",
        "operationId" : "getCategoryWiseWithTagsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sortTag",
          "in" : "query",
          "description" : "sortTag",
          "required" : false,
          "type" : "string",
          "default" : "OWASP A"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«CategoryAttributes»»",
              "originalRef" : "Response«List«CategoryAttributes»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«CategoryAttributes»»",
              "originalRef" : "Response«List«CategoryAttributes»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}/category-wise/byStatusPending" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "getCategoryWiseStatusPending",
        "operationId" : "getCategoryWiseStatusPendingUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}/coverage" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "findCoverageByProjectId",
        "operationId" : "findCoverageByProjectIdUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«APICoverageDetails»",
              "originalRef" : "Response«APICoverageDetails»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«APICoverageDetails»",
              "originalRef" : "Response«APICoverageDetails»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/project-id/{id}/review-status-wise" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "getReviewStatusWise",
        "operationId" : "getReviewStatusWiseUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCount»»",
              "originalRef" : "Response«List«TestSuiteCount»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/propagateAssertions" : {
      "post" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "propagateAssertions",
        "operationId" : "propagateAssertionsUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/propagateHeaders" : {
      "post" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "propagateHeaders",
        "operationId" : "propagateHeadersUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/propagatePayload" : {
      "post" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "propagatePayload",
        "operationId" : "propagatePayloadUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/propagateSeverity" : {
      "post" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "propagateSeverity",
        "operationId" : "propagateSeverityUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/search/{keyword}" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "findAll",
        "operationId" : "findAllUsingGET_16",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "keyword",
          "in" : "path",
          "description" : "keyword",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/{id}" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_18",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_16",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/{id}/playbook-count-snapshot" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "playbookCountSnapshot",
        "operationId" : "playbookCountSnapshotUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCountSnapshot»»",
              "originalRef" : "Response«List«TestSuiteCountSnapshot»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuiteCountSnapshot»»",
              "originalRef" : "Response«List«TestSuiteCountSnapshot»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/{id}/playbook-countByActCat" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "playbookCounts",
        "operationId" : "playbookCountsUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«PlaybookGraph»»",
              "originalRef" : "Response«List«PlaybookGraph»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«PlaybookGraph»»",
              "originalRef" : "Response«List«PlaybookGraph»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/{id}/test-suite/search" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "search",
        "operationId" : "searchUsingGET_6",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "category",
          "in" : "query",
          "description" : "category",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "review-status",
          "in" : "query",
          "description" : "review-status",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "autoGenerated",
          "in" : "query",
          "description" : "autoGenerated",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "query",
          "description" : "keyword",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«TestSuite»»",
              "originalRef" : "Response«List«TestSuite»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/{projectId}/ui" : {
      "post" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "createFromUI",
        "operationId" : "createFromUIUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "dto",
          "description" : "dto",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/test-suites/{projectId}/{testSuiteName}" : {
      "get" : {
        "tags" : [ "test-suite-controller" ],
        "summary" : "findByProjectIdAndTestSuiteName",
        "operationId" : "findByProjectIdAndTestSuiteNameUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "projectId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "testSuiteName",
          "in" : "path",
          "description" : "testSuiteName",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«TestSuite»",
              "originalRef" : "Response«TestSuite»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/user-variable" : {
      "post" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "create",
        "operationId" : "createUsingPOST_23",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "userVariable",
          "description" : "userVariable",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserVariable",
            "originalRef" : "UserVariable"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/user-variable/create-variables" : {
      "post" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "createVariables",
        "operationId" : "createVariablesUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "userVariables",
          "description" : "userVariables",
          "required" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserVariable",
              "originalRef" : "UserVariable"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«UserVariable»»",
              "originalRef" : "Response«List«UserVariable»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«UserVariable»»",
              "originalRef" : "Response«List«UserVariable»»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/user-variable/project/{id}" : {
      "get" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "findByProjectId",
        "operationId" : "findByProjectIdUsingGET_10",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«UserVariable»»",
              "originalRef" : "Response«List«UserVariable»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«UserVariable»»",
              "originalRef" : "Response«List«UserVariable»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/user-variable/project/{id}/search/{keyword}" : {
      "get" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "findByProjectIdAndKeyword",
        "operationId" : "findByProjectIdAndKeywordUsingGET",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keyword",
          "in" : "path",
          "description" : "keyword",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "page",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "pageSize",
          "required" : false,
          "type" : "integer",
          "default" : 20,
          "format" : "int32"
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "sort",
          "required" : false,
          "type" : "string",
          "default" : "createdDate"
        }, {
          "name" : "sortType",
          "in" : "query",
          "description" : "sortType",
          "required" : false,
          "type" : "string",
          "default" : "DESC",
          "enum" : [ "ASC", "DESC" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«List«UserVariable»»",
              "originalRef" : "Response«List«UserVariable»»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«List«UserVariable»»",
              "originalRef" : "Response«List«UserVariable»»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/user-variable/{userVariableId}" : {
      "get" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "findById",
        "operationId" : "findByIdUsingGET_19",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "userVariableId",
          "in" : "path",
          "description" : "userVariableId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "post" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "update",
        "operationId" : "updateUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "userVariable",
          "description" : "userVariable",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserVariable",
            "originalRef" : "UserVariable"
          }
        }, {
          "name" : "userVariableId",
          "in" : "path",
          "description" : "userVariableId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      },
      "delete" : {
        "tags" : [ "user-variable-controller" ],
        "summary" : "delete",
        "operationId" : "deleteUsingDELETE_17",
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "userVariableId",
          "in" : "path",
          "description" : "userVariableId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«UserVariable»",
              "originalRef" : "Response«UserVariable»"
            }
          },
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/users/forgot-password" : {
      "post" : {
        "tags" : [ "users-controller" ],
        "summary" : "forgotPassword",
        "operationId" : "forgotPasswordUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "userEmail",
          "in" : "query",
          "description" : "userEmail",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/users/personal-sign-up" : {
      "post" : {
        "tags" : [ "users-controller" ],
        "summary" : "personalSignUp",
        "operationId" : "personalSignUpUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "users",
          "description" : "users",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Users",
            "originalRef" : "Users"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/users/reset-password" : {
      "put" : {
        "tags" : [ "users-controller" ],
        "summary" : "resetPasswordWithToken",
        "operationId" : "resetPasswordWithTokenUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "description" : "token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/users/sign-up" : {
      "post" : {
        "tags" : [ "users-controller" ],
        "summary" : "freeAccountSignUp",
        "operationId" : "freeAccountSignUpUsingPOST",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "users",
          "description" : "users",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Users",
            "originalRef" : "Users"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«boolean»",
              "originalRef" : "Response«boolean»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/users/status" : {
      "get" : {
        "tags" : [ "users-controller" ],
        "summary" : "login",
        "operationId" : "loginUsingGET_1",
        "produces" : [ "*/*" ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Users»",
              "originalRef" : "Response«Users»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Users»",
              "originalRef" : "Response«Users»"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    },
    "/api/v1/users/update-mfa" : {
      "put" : {
        "tags" : [ "users-controller" ],
        "summary" : "updateMFA",
        "operationId" : "updateMFAUsingPUT",
        "consumes" : [ "application/json" ],
        "produces" : [ "*/*" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "users",
          "description" : "users",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Users",
            "originalRef" : "Users"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "responseSchema" : {
              "$ref" : "#/definitions/Response«Users»",
              "originalRef" : "Response«Users»"
            },
            "schema" : {
              "$ref" : "#/definitions/Response«Users»",
              "originalRef" : "Response«Users»"
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "deprecated" : false
      }
    }
  },
  "definitions" : {
    "APICoverageDetails" : {
      "type" : "object",
      "properties" : {
        "countByCategory" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuiteCount",
            "originalRef" : "TestSuiteCount"
          }
        },
        "countByMethod" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuiteCount",
            "originalRef" : "TestSuiteCount"
          }
        },
        "countBySeverity" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuiteCount",
            "originalRef" : "TestSuiteCount"
          }
        },
        "coverage" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Coverage",
            "originalRef" : "Coverage"
          }
        },
        "endpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Endpoint",
            "originalRef" : "Endpoint"
          }
        },
        "totalEndpoints" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalSuites" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalTestCases" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "APICoverageDetails"
    },
    "APICoverageMatrix" : {
      "type" : "object",
      "properties" : {
        "endPointsCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "projectId" : {
          "type" : "string"
        },
        "resourceDefinitionList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ResourceDefinition",
            "originalRef" : "ResourceDefinition"
          }
        }
      },
      "title" : "APICoverageMatrix"
    },
    "APIGatewayTaskResponse" : {
      "type" : "object",
      "properties" : {
        "apiId" : {
          "type" : "string"
        },
        "apiManagementServiceName" : {
          "type" : "string"
        },
        "apiName" : {
          "type" : "string"
        },
        "apiType" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "resourceGroupName" : {
          "type" : "string"
        },
        "specContent" : {
          "type" : "string"
        },
        "stage" : {
          "type" : "string"
        }
      },
      "title" : "APIGatewayTaskResponse"
    },
    "AbacResource" : {
      "type" : "object",
      "properties" : {
        "createBody" : {
          "type" : "string"
        },
        "createEndpoint" : {
          "type" : "string"
        },
        "createUserAuth" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "deleteEndpoint" : {
          "type" : "string"
        },
        "enumValues" : {
          "type" : "string"
        },
        "generatorId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "initScriptName" : {
          "type" : "string"
        },
        "lock" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "resourceName" : {
          "type" : "string"
        },
        "scripts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbacScript",
            "originalRef" : "AbacScript"
          }
        },
        "typeThreeCreateEndpoint" : {
          "type" : "string"
        },
        "validations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbacValidation",
            "originalRef" : "AbacValidation"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "AbacResource"
    },
    "AbacScript" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "type" : "string"
        },
        "deleteEndPoint" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "scriptName" : {
          "type" : "string"
        },
        "scriptType" : {
          "type" : "string"
        },
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userAuth" : {
          "type" : "string"
        },
        "validationScript" : {
          "type" : "boolean"
        }
      },
      "title" : "AbacScript"
    },
    "AbacValidation" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "lock" : {
          "type" : "boolean"
        },
        "path" : {
          "type" : "string"
        },
        "userAuth" : {
          "type" : "string"
        },
        "validationType" : {
          "type" : "string"
        }
      },
      "title" : "AbacValidation"
    },
    "Account" : {
      "type" : "object",
      "properties" : {
        "accessKey" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "allowedRegions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "autoOnboard" : {
          "type" : "boolean"
        },
        "bucketName" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "isDefaultStore" : {
          "type" : "boolean"
        },
        "isdefault" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "ownerName" : {
          "type" : "string"
        },
        "prop1" : {
          "type" : "string"
        },
        "prop2" : {
          "type" : "string"
        },
        "prop3" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "secretKey" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Account"
    },
    "AccountMinimalDto" : {
      "type" : "object",
      "properties" : {
        "accountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "region" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "AccountMinimalDto"
    },
    "Activity" : {
      "type" : "object",
      "properties" : {
        "activity" : {
          "type" : "string",
          "enum" : [ "PLAYBOOK_MODIFY", "COVERAGE_ASSERTION_MODIFY", "PLAYBOOK", "ASSERTION", "RESOURCE", "PAYLOAD", "ISSUE_OPEN", "ISSUE_CLOSE", "ISSUE_NEW", "ISSUE_DELETE", "Sync", "SEVERITY", "HEADERS", "PROJECT_SAVE" ]
        },
        "auth" : {
          "type" : "string"
        },
        "autoCodeGeneratorCategory" : {
          "type" : "string"
        },
        "autoCodeGeneratorDisplayHeaderLabel" : {
          "type" : "string"
        },
        "autoCodeGeneratorId" : {
          "type" : "string"
        },
        "autoCodeGeneratorName" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdByName" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "diff" : {
          "type" : "string"
        },
        "entityName" : {
          "type" : "string"
        },
        "eventId" : {
          "type" : "string"
        },
        "eventStatus" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issueId" : {
          "type" : "string"
        },
        "jobId" : {
          "type" : "string"
        },
        "logId" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedByName" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "orgId" : {
          "type" : "string"
        },
        "orgName" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "testCaseNumber" : {
          "type" : "string"
        },
        "testCaseResponseIssueTrackerId" : {
          "type" : "string"
        },
        "testSuiteId" : {
          "type" : "string"
        },
        "testSuiteName" : {
          "type" : "string"
        },
        "validations" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Activity"
    },
    "Address" : {
      "type" : "object",
      "properties" : {
        "absoluteAddress" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fullyQualifiedName" : {
          "type" : "string"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "kind" : {
          "type" : "string"
        },
        "length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "offsetFromParent" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parentIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "relativeAddress" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Address"
    },
    "Alert" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "healedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "message" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "readDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "refId" : {
          "type" : "string"
        },
        "refName" : {
          "type" : "string"
        },
        "refType" : {
          "type" : "string",
          "enum" : [ "PROJECT", "JOB", "RUN", "TEST_SUITE", "JOB_SUMMARY", "ORG", "USER" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "UNREAD", "READ", "EMAILED" ]
        },
        "subject" : {
          "type" : "string"
        },
        "taskState" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "HEALED" ]
        },
        "taskType" : {
          "type" : "string",
          "enum" : [ "PROJECT_SYNC", "JOB_VALIDATION", "JOB_EXECUTION", "TEST_EXECUTION", "TEST_RESULT_DEVIATION", "ISSUE_TRACKER_LOGGING" ]
        },
        "type" : {
          "type" : "string",
          "enum" : [ "ERROR", "WARNING", "INFO", "SUMMARY", "SUCCESS" ]
        },
        "users" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Alert"
    },
    "Artifact" : {
      "type" : "object",
      "properties" : {
        "contents" : {
          "$ref" : "#/definitions/ArtifactContent",
          "originalRef" : "ArtifactContent"
        },
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "encoding" : {
          "type" : "string"
        },
        "hashes" : {
          "$ref" : "#/definitions/Hashes",
          "originalRef" : "Hashes"
        },
        "lastModifiedTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "length" : {
          "type" : "integer",
          "format" : "int32"
        },
        "location" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "mimeType" : {
          "type" : "string"
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "parentIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "analysisTarget", "attachment", "responseFile", "resultFile", "standardStream", "tracedFile", "unmodified", "modified", "added", "deleted", "renamed", "uncontrolled", "driver", "extension", "translation", "taxonomy", "policy", "referencedOnCommandLine", "memoryContents", "directory", "userSpecifiedConfiguration", "toolSpecifiedConfiguration", "debugOutputFile" ]
          }
        },
        "sourceLanguage" : {
          "type" : "string"
        }
      },
      "title" : "Artifact"
    },
    "ArtifactChange" : {
      "type" : "object",
      "properties" : {
        "artifactLocation" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "replacements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Replacement",
            "originalRef" : "Replacement"
          }
        }
      },
      "title" : "ArtifactChange"
    },
    "ArtifactContent" : {
      "type" : "object",
      "properties" : {
        "binary" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "rendered" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        },
        "text" : {
          "type" : "string"
        }
      },
      "title" : "ArtifactContent"
    },
    "ArtifactLocation" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "uri" : {
          "type" : "string"
        },
        "uriBaseId" : {
          "type" : "string"
        }
      },
      "title" : "ArtifactLocation"
    },
    "AssistantMessage" : {
      "type" : "object",
      "properties" : {
        "dismissed" : {
          "type" : "boolean"
        },
        "effort" : {
          "type" : "string"
        },
        "link" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "order" : {
          "type" : "integer",
          "format" : "int32"
        },
        "percentage" : {
          "type" : "number",
          "format" : "double"
        },
        "projectId" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "todoId" : {
          "type" : "string"
        }
      },
      "title" : "AssistantMessage"
    },
    "Attachment" : {
      "type" : "object",
      "properties" : {
        "artifactLocation" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "rectangles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Rectangle",
            "originalRef" : "Rectangle"
          }
        },
        "regions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Region",
            "originalRef" : "Region"
          }
        }
      },
      "title" : "Attachment"
    },
    "Auth" : {
      "type" : "object",
      "properties" : {
        "accessTokenUri" : {
          "type" : "string"
        },
        "authType" : {
          "type" : "string",
          "enum" : [ "Basic", "BASIC", "BasicAuth", "OAuth_2_0", "Token", "No_Authentication", "Auth0", "Certificate", "Digest", "HMAC" ]
        },
        "authorizationScheme" : {
          "type" : "string",
          "enum" : [ "form", "header", "none", "query" ]
        },
        "clientAuthenticationScheme" : {
          "type" : "string",
          "enum" : [ "form", "header", "none", "query" ]
        },
        "clientId" : {
          "type" : "string"
        },
        "clientSecret" : {
          "type" : "string"
        },
        "grantType" : {
          "type" : "string",
          "enum" : [ "authorization_code", "implicit", "client_credentials", "password" ]
        },
        "header_1" : {
          "type" : "string"
        },
        "header_2" : {
          "type" : "string"
        },
        "header_3" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "invalid" : {
          "type" : "boolean"
        },
        "lastTestedOn" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "passwordMasked" : {
          "type" : "boolean"
        },
        "preEstablishedRedirectUri" : {
          "type" : "string"
        },
        "scope" : {
          "type" : "string"
        },
        "tokenName" : {
          "type" : "string"
        },
        "useCurrentUri" : {
          "type" : "boolean"
        },
        "userAuthorizationUri" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "title" : "Auth"
    },
    "AutoCodeConfig" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "genPolicy" : {
          "type" : "string",
          "enum" : [ "None", "Create" ]
        },
        "generators" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoCodeGenerator",
            "originalRef" : "AutoCodeGenerator"
          }
        },
        "globalSkipPaths" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "openAPISpec" : {
          "type" : "string"
        },
        "project" : {
          "$ref" : "#/definitions/Project",
          "originalRef" : "Project"
        },
        "totalEndpoints" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "AutoCodeConfig"
    },
    "AutoCodeGenerator" : {
      "type" : "object",
      "properties" : {
        "abacResources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbacResource",
            "originalRef" : "AbacResource"
          }
        },
        "activatedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "activeByDefault" : {
          "type" : "boolean"
        },
        "activityAction" : {
          "type" : "string",
          "enum" : [ "PLAYBOOK_MODIFY", "COVERAGE_ASSERTION_MODIFY", "PLAYBOOK", "ASSERTION", "RESOURCE", "PAYLOAD", "ISSUE_OPEN", "ISSUE_CLOSE", "ISSUE_NEW", "ISSUE_DELETE", "Sync", "SEVERITY", "HEADERS", "PROJECT_SAVE" ]
        },
        "activityText" : {
          "type" : "string"
        },
        "addOptionalParams" : {
          "type" : "boolean"
        },
        "assertionDescription" : {
          "type" : "string"
        },
        "assertions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "assertionsText" : {
          "type" : "string"
        },
        "auth" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "string"
        },
        "beta" : {
          "type" : "boolean"
        },
        "bountyValue" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "categoryGroup" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "INJECTION", "STORED_INJECTION", "ABAC" ]
        },
        "coverageMultiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "currentScripts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customHeaders" : {
          "type" : "string"
        },
        "customType" : {
          "type" : "string"
        },
        "cvssScore" : {
          "type" : "string"
        },
        "cvssScoreType" : {
          "type" : "string",
          "enum" : [ "Automatic", "Manual", "Propagate" ]
        },
        "database" : {
          "$ref" : "#/definitions/Database",
          "originalRef" : "Database"
        },
        "displayHeaderDescription" : {
          "type" : "string"
        },
        "displayHeaderLabel" : {
          "type" : "string"
        },
        "endpointSelection" : {
          "type" : "string",
          "enum" : [ "ALL", "GET_NO_PARAMS", "GET_WITH_PARAMS", "GET_SINGLE_PLAYBOOK", "SINGLE_PLAYBOOK", "POST_ONLY", "GET_ONLY" ]
        },
        "expectedScripts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fixHours" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "lastModifiedByUser" : {
          "type" : "string"
        },
        "matches" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoCodeGeneratorMatches",
            "originalRef" : "AutoCodeGeneratorMatches"
          }
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "newlyAdded" : {
          "type" : "boolean"
        },
        "owner" : {
          "type" : "string"
        },
        "payloads" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Payload",
            "originalRef" : "Payload"
          }
        },
        "project" : {
          "$ref" : "#/definitions/Project",
          "originalRef" : "Project"
        },
        "rank" : {
          "type" : "string"
        },
        "researchers" : {
          "type" : "string"
        },
        "saveAction" : {
          "type" : "boolean"
        },
        "sequenceOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        },
        "showResponse" : {
          "type" : "boolean"
        },
        "skipVulnerabilityFiling" : {
          "type" : "boolean"
        },
        "supportedParams" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "useCategoryAssertion" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "AutoCodeGenerator"
    },
    "AutoCodeGeneratorMatches" : {
      "type" : "object",
      "properties" : {
        "allowRoles" : {
          "type" : "string"
        },
        "bodyProperties" : {
          "type" : "string"
        },
        "denyRoles" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "methods" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "pathPatterns" : {
          "type" : "string"
        },
        "queryParams" : {
          "type" : "string"
        },
        "resourceSamples" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "AutoCodeGeneratorMatches"
    },
    "AutoSuggestion" : {
      "type" : "object",
      "properties" : {
        "artificialIntelligenceComment" : {
          "type" : "string"
        },
        "auth" : {
          "type" : "string"
        },
        "averageCvss" : {
          "type" : "string"
        },
        "bounty" : {
          "type" : "integer",
          "format" : "int32"
        },
        "category" : {
          "type" : "string"
        },
        "categoryDisplayLabel" : {
          "type" : "string"
        },
        "comment" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cvssRating" : {
          "type" : "string"
        },
        "cvssScore" : {
          "type" : "string"
        },
        "endPoint" : {
          "type" : "string"
        },
        "env" : {
          "type" : "string"
        },
        "environment" : {
          "$ref" : "#/definitions/Environment",
          "originalRef" : "Environment"
        },
        "estimates" : {
          "type" : "number",
          "format" : "double"
        },
        "failedCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "falsePositive" : {
          "type" : "boolean"
        },
        "generatorType" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "isNew" : {
          "type" : "string"
        },
        "issueDesc" : {
          "type" : "string"
        },
        "issues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoSuggestionIssue",
            "originalRef" : "AutoSuggestionIssue"
          }
        },
        "label" : {
          "type" : "string"
        },
        "manualEndpoint" : {
          "type" : "boolean"
        },
        "method" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "path" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "projectName" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "regression" : {
          "type" : "boolean"
        },
        "remediation" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "respStatusCode" : {
          "type" : "string"
        },
        "reviewTag" : {
          "type" : "boolean"
        },
        "runId" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "NEW", "SKIPPED", "ARCHIVED", "CLOSED" ]
        },
        "suggestion" : {
          "type" : "string"
        },
        "suggestionId" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "testCaseNumber" : {
          "type" : "string"
        },
        "testSuiteId" : {
          "type" : "string"
        },
        "testSuiteName" : {
          "type" : "string"
        },
        "totalFailed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPassed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedDate" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "wireLogs" : {
          "type" : "string"
        }
      },
      "title" : "AutoSuggestion"
    },
    "AutoSuggestionCountSnapshot" : {
      "type" : "object",
      "properties" : {
        "autoSuggestionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "environmentId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "snapshotDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "AutoSuggestionCountSnapshot"
    },
    "AutoSuggestionIssue" : {
      "type" : "object",
      "properties" : {
        "autoSuggestionId" : {
          "type" : "string"
        },
        "envName" : {
          "type" : "string"
        },
        "issueId" : {
          "type" : "string"
        },
        "issueNumber" : {
          "type" : "string"
        },
        "issueTrackerType" : {
          "type" : "string"
        },
        "jobId" : {
          "type" : "string"
        },
        "jobName" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      },
      "title" : "AutoSuggestionIssue"
    },
    "AutoSuggestionMinimal" : {
      "type" : "object",
      "properties" : {
        "auth" : {
          "type" : "string"
        },
        "bounty" : {
          "type" : "integer",
          "format" : "int32"
        },
        "category" : {
          "type" : "string"
        },
        "categoryDisplayLabel" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cvssScore" : {
          "type" : "string"
        },
        "endPoint" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "respStatusCode" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "NEW", "SKIPPED", "ARCHIVED", "CLOSED" ]
        },
        "testCaseNumber" : {
          "type" : "string"
        },
        "testSuiteId" : {
          "type" : "string"
        },
        "testSuiteName" : {
          "type" : "string"
        }
      },
      "title" : "AutoSuggestionMinimal"
    },
    "AutoSuggestionReport" : {
      "type" : "object",
      "properties" : {
        "activatedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "assessed" : {
          "type" : "boolean"
        },
        "authors" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "categoryType" : {
          "type" : "string"
        },
        "closed" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fixHours" : {
          "type" : "number",
          "format" : "float"
        },
        "flaggedByAi" : {
          "type" : "boolean"
        },
        "lastModifiedByUser" : {
          "type" : "string"
        },
        "open" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pendingValidations" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rank" : {
          "type" : "string"
        },
        "recommendation" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string"
        },
        "totalTestSuiteResponseCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "validations" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "AutoSuggestionReport"
    },
    "BugsCounts" : {
      "type" : "object",
      "properties" : {
        "closeBugs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "openBugs" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalBugsDiscovered" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalBugsOpen" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalbugsClose" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "BugsCounts"
    },
    "CategoryAttributes" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "displayHeaderLabel" : {
          "type" : "string"
        },
        "owaspTag" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        }
      },
      "title" : "CategoryAttributes"
    },
    "CategoryRatingHistory" : {
      "type" : "object",
      "properties" : {
        "adequate" : {
          "type" : "boolean"
        },
        "assesmentDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "assesmentRating" : {
          "type" : "integer",
          "format" : "int64"
        },
        "category" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "envId" : {
          "type" : "string"
        },
        "envName" : {
          "type" : "string"
        },
        "expirationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scripts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "soName" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "CategoryRatingHistory"
    },
    "Cluster" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/AccountMinimalDto",
          "originalRef" : "AccountMinimalDto"
        },
        "cloudType" : {
          "type" : "string",
          "enum" : [ "AWS", "DIGITAL_OCEAN", "GCP", "AZURE", "PRIVATE_CLOUD", "VMWARE", "OPENSTACK", "OTHER" ]
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dockerSwarmScript" : {
          "type" : "string"
        },
        "driver" : {
          "type" : "string",
          "enum" : [ "MANUAL", "KUBERNETES" ]
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "ipAddress" : {
          "type" : "string"
        },
        "key" : {
          "type" : "string"
        },
        "kubernetesManualScript" : {
          "type" : "string"
        },
        "kubernetesSwarmScript" : {
          "type" : "string"
        },
        "lastPingTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "live" : {
          "type" : "integer",
          "format" : "int32"
        },
        "manual" : {
          "type" : "boolean"
        },
        "manualScript" : {
          "type" : "string"
        },
        "max" : {
          "type" : "integer",
          "format" : "int32"
        },
        "min" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "nodeId" : {
          "type" : "string"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "ownerName" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "INACTIVE", "LAUNCHING", "FAILED", "DELETING", "DELETED" ]
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "visibility" : {
          "type" : "string",
          "enum" : [ "PRIVATE", "ORG_PUBLIC", "PUBLIC" ]
        }
      },
      "title" : "Cluster"
    },
    "CodeFlow" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "threadFlows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThreadFlow",
            "originalRef" : "ThreadFlow"
          }
        }
      },
      "title" : "CodeFlow"
    },
    "ConfigurationOverride" : {
      "type" : "object",
      "properties" : {
        "configuration" : {
          "$ref" : "#/definitions/ReportingConfiguration",
          "originalRef" : "ReportingConfiguration"
        },
        "descriptor" : {
          "$ref" : "#/definitions/ReportingDescriptorReference",
          "originalRef" : "ReportingDescriptorReference"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "ConfigurationOverride"
    },
    "Conversion" : {
      "type" : "object",
      "properties" : {
        "analysisToolLogFiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ArtifactLocation",
            "originalRef" : "ArtifactLocation"
          }
        },
        "invocation" : {
          "$ref" : "#/definitions/Invocation",
          "originalRef" : "Invocation"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "tool" : {
          "$ref" : "#/definitions/Tool",
          "originalRef" : "Tool"
        }
      },
      "title" : "Conversion"
    },
    "Coverage" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "coveragePercentage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "coveredEndpoints" : {
          "type" : "integer",
          "format" : "int32"
        },
        "relevantEndpoints" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalEndpoints" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tsCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Coverage"
    },
    "CustomAutoCodeGeneratorMatches" : {
      "type" : "object",
      "properties" : {
        "allowRoles" : {
          "type" : "string"
        },
        "bodyProperties" : {
          "type" : "string"
        },
        "denyRoles" : {
          "type" : "string"
        },
        "methods" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "pathPatterns" : {
          "type" : "string"
        },
        "queryParams" : {
          "type" : "string"
        },
        "resourceSamples" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "CustomAutoCodeGeneratorMatches"
    },
    "CustomGenerator" : {
      "type" : "object",
      "properties" : {
        "activatedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "activeByDefault" : {
          "type" : "boolean"
        },
        "addOptionalParams" : {
          "type" : "boolean"
        },
        "assertionDescription" : {
          "type" : "string"
        },
        "assertions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "assertionsText" : {
          "type" : "string"
        },
        "auth" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "string"
        },
        "beta" : {
          "type" : "boolean"
        },
        "bountyValue" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "categoryGroup" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "INJECTION", "STORED_INJECTION", "ABAC" ]
        },
        "coverageMultiplier" : {
          "type" : "number",
          "format" : "double"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "customHeaders" : {
          "type" : "string"
        },
        "customType" : {
          "type" : "string"
        },
        "cvssScore" : {
          "type" : "string"
        },
        "cvssScoreType" : {
          "type" : "string",
          "enum" : [ "Automatic", "Manual", "Propagate" ]
        },
        "data" : {
          "type" : "string"
        },
        "dataRecords" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataRecord",
            "originalRef" : "DataRecord"
          }
        },
        "database" : {
          "$ref" : "#/definitions/Database",
          "originalRef" : "Database"
        },
        "defaultCatAssertion" : {
          "type" : "boolean"
        },
        "deleted" : {
          "type" : "boolean"
        },
        "displayHeaderDescription" : {
          "type" : "string"
        },
        "displayHeaderLabel" : {
          "type" : "string"
        },
        "endpointSelection" : {
          "type" : "string",
          "enum" : [ "ALL", "GET_NO_PARAMS", "GET_WITH_PARAMS", "GET_SINGLE_PLAYBOOK", "SINGLE_PLAYBOOK", "POST_ONLY", "GET_ONLY" ]
        },
        "fixHours" : {
          "type" : "string"
        },
        "generatorScope" : {
          "type" : "string",
          "enum" : [ "PRIVATE", "PUBLIC" ]
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "matches" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomAutoCodeGeneratorMatches",
            "originalRef" : "CustomAutoCodeGeneratorMatches"
          }
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "org" : {
          "$ref" : "#/definitions/Org",
          "originalRef" : "Org"
        },
        "remediation" : {
          "type" : "string"
        },
        "researchers" : {
          "type" : "string"
        },
        "sequenceOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        },
        "showResponse" : {
          "type" : "boolean"
        },
        "skipVulnerabilityFiling" : {
          "type" : "boolean"
        },
        "supportedParams" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "CustomGenerator"
    },
    "Dashboard" : {
      "type" : "object",
      "properties" : {
        "cvssAverage" : {
          "type" : "number",
          "format" : "double"
        },
        "riskScore" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalActiveCategories" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalAssestCategories" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalCoverage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalEndpoints" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Dashboard"
    },
    "DataRecord" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dataSet" : {
          "type" : "string"
        },
        "dataSetId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "record" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "DataRecord"
    },
    "DataSet" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "project" : {
          "$ref" : "#/definitions/ProjectMinimalDto",
          "originalRef" : "ProjectMinimalDto"
        },
        "props" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "DataSet"
    },
    "Database" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "title" : "Database"
    },
    "DefaultIntegration" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/Account",
          "originalRef" : "Account"
        },
        "accountFor" : {
          "type" : "string",
          "enum" : [ "ISSUE_TRACKER", "REPORT_STORAGE", "NOTIFICATION_HUB", "GIT_BACKUP" ]
        },
        "accountId" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "gitBackup" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DefaultIntegrationGitBackup",
            "originalRef" : "DefaultIntegrationGitBackup"
          }
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issueTracker" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DefaultIntegrationIssueTracker",
            "originalRef" : "DefaultIntegrationIssueTracker"
          }
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "notification" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DefaultIntegrationNotification",
            "originalRef" : "DefaultIntegrationNotification"
          }
        },
        "orgId" : {
          "type" : "string"
        },
        "report" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DefaultIntegrationReport",
            "originalRef" : "DefaultIntegrationReport"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "DefaultIntegration"
    },
    "DefaultIntegrationGitBackup" : {
      "type" : "object",
      "properties" : {
        "gitUrl" : {
          "type" : "string"
        }
      },
      "title" : "DefaultIntegrationGitBackup"
    },
    "DefaultIntegrationIssueTracker" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "assigneeAccountId" : {
          "type" : "string"
        },
        "folderName" : {
          "type" : "string"
        },
        "issueType" : {
          "type" : "string"
        },
        "labels" : {
          "type" : "string"
        },
        "projectKey" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      },
      "title" : "DefaultIntegrationIssueTracker"
    },
    "DefaultIntegrationNotification" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "channel" : {
          "type" : "string"
        },
        "skipNotification" : {
          "type" : "boolean"
        },
        "to" : {
          "type" : "string"
        }
      },
      "title" : "DefaultIntegrationNotification"
    },
    "DefaultIntegrationReport" : {
      "type" : "object",
      "properties" : {
        "allowedRegions" : {
          "type" : "string"
        },
        "bucketName" : {
          "type" : "string"
        },
        "prop1" : {
          "type" : "string"
        },
        "prop2" : {
          "type" : "string"
        },
        "prop3" : {
          "type" : "string"
        }
      },
      "title" : "DefaultIntegrationReport"
    },
    "Edge" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "label" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "sourceNodeId" : {
          "type" : "string"
        },
        "targetNodeId" : {
          "type" : "string"
        }
      },
      "title" : "Edge"
    },
    "EdgeTraversal" : {
      "type" : "object",
      "properties" : {
        "edgeId" : {
          "type" : "string"
        },
        "finalState" : {
          "$ref" : "#/definitions/FinalState",
          "originalRef" : "FinalState"
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "stepOverEdgeCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "EdgeTraversal"
    },
    "Endpoint" : {
      "type" : "object",
      "properties" : {
        "coverageStatus" : {
          "type" : "object"
        },
        "description" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "isMapped" : {
          "type" : "boolean"
        },
        "manualEndpoint" : {
          "type" : "boolean"
        },
        "method" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndpointParameter",
            "originalRef" : "EndpointParameter"
          }
        },
        "pathDependency" : {
          "type" : "string"
        },
        "payload" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "queryDependency" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "responses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndpointResponse",
            "originalRef" : "EndpointResponse"
          }
        },
        "sequenceOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "summary" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "typeThreePath" : {
          "type" : "string"
        }
      },
      "title" : "Endpoint"
    },
    "EndpointParameter" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "type" : "string"
        },
        "defaultValue" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "endpointId" : {
          "type" : "string"
        },
        "enums" : {
          "type" : "string"
        },
        "example" : {
          "type" : "string"
        },
        "format" : {
          "type" : "string"
        },
        "in" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "required" : {
          "type" : "boolean"
        },
        "type" : {
          "type" : "string"
        }
      },
      "title" : "EndpointParameter"
    },
    "EndpointResource" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "enums" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      },
      "title" : "EndpointResource"
    },
    "EndpointResponse" : {
      "type" : "object",
      "properties" : {
        "contentType" : {
          "type" : "string"
        },
        "endpointId" : {
          "type" : "string"
        },
        "ref" : {
          "type" : "string"
        },
        "response" : {
          "type" : "string"
        },
        "responseStatus" : {
          "type" : "string"
        }
      },
      "title" : "EndpointResponse"
    },
    "Entitlement" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "entitlementType" : {
          "type" : "string",
          "enum" : [ "OWNER", "VIEWER", "SECURITY_RESEARCHER" ]
        },
        "projectId" : {
          "type" : "string"
        },
        "userId" : {
          "type" : "string"
        }
      },
      "title" : "Entitlement"
    },
    "Environment" : {
      "type" : "object",
      "properties" : {
        "auths" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Auth",
            "originalRef" : "Auth"
          }
        },
        "baseUrl" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issueTracker" : {
          "$ref" : "#/definitions/EnvironmentIssueTracker",
          "originalRef" : "EnvironmentIssueTracker"
        },
        "localOffSet" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "projectCreation" : {
          "type" : "boolean"
        },
        "projectId" : {
          "type" : "string"
        },
        "reachable" : {
          "type" : "boolean"
        },
        "refId" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Environment"
    },
    "EnvironmentIssueTracker" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "id" : {
          "type" : "string"
        },
        "issueType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "projectKey" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      },
      "title" : "EnvironmentIssueTracker"
    },
    "EnvironmentVariables" : {
      "type" : "object",
      "title" : "EnvironmentVariables"
    },
    "Event" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "entityId" : {
          "type" : "string"
        },
        "entityType" : {
          "type" : "string",
          "enum" : [ "Project", "Job", "Bot" ]
        },
        "eventType" : {
          "type" : "string",
          "enum" : [ "Sync", "Run", "Deploy", "Delete", "Connected", "Issue_Tracker_Logging" ]
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "link" : {
          "type" : "string"
        },
        "logId" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "In_progress", "Done", "Timeout", "Failed", "Stopped" ]
        },
        "taskId" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Event"
    },
    "Exception" : {
      "type" : "object",
      "properties" : {
        "innerExceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Exception",
            "originalRef" : "Exception"
          }
        },
        "kind" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "stack" : {
          "$ref" : "#/definitions/Stack",
          "originalRef" : "Stack"
        }
      },
      "title" : "Exception"
    },
    "ExternalProperties" : {
      "type" : "object",
      "properties" : {
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Address",
            "originalRef" : "Address"
          }
        },
        "artifacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Artifact",
            "originalRef" : "Artifact"
          }
        },
        "conversion" : {
          "$ref" : "#/definitions/Conversion",
          "originalRef" : "Conversion"
        },
        "driver" : {
          "$ref" : "#/definitions/ToolComponent",
          "originalRef" : "ToolComponent"
        },
        "extensions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ToolComponent",
            "originalRef" : "ToolComponent"
          }
        },
        "externalizedProperties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "graphs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Graph",
            "originalRef" : "Graph"
          }
        },
        "guid" : {
          "type" : "string"
        },
        "invocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Invocation",
            "originalRef" : "Invocation"
          }
        },
        "logicalLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LogicalLocation",
            "originalRef" : "LogicalLocation"
          }
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ToolComponent",
            "originalRef" : "ToolComponent"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Result",
            "originalRef" : "Result"
          }
        },
        "runGuid" : {
          "type" : "string"
        },
        "schema" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "taxonomies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ToolComponent",
            "originalRef" : "ToolComponent"
          }
        },
        "threadFlowLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThreadFlowLocation",
            "originalRef" : "ThreadFlowLocation"
          }
        },
        "translations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ToolComponent",
            "originalRef" : "ToolComponent"
          }
        },
        "version" : {
          "type" : "string",
          "enum" : [ "2.1.0" ]
        },
        "webRequests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebRequest",
            "originalRef" : "WebRequest"
          }
        },
        "webResponses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WebResponse",
            "originalRef" : "WebResponse"
          }
        }
      },
      "title" : "ExternalProperties"
    },
    "ExternalPropertyFileReference" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string"
        },
        "itemCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "location" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "ExternalPropertyFileReference"
    },
    "ExternalPropertyFileReferences" : {
      "type" : "object",
      "properties" : {
        "addresses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "artifacts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "conversion" : {
          "$ref" : "#/definitions/ExternalPropertyFileReference",
          "originalRef" : "ExternalPropertyFileReference"
        },
        "driver" : {
          "$ref" : "#/definitions/ExternalPropertyFileReference",
          "originalRef" : "ExternalPropertyFileReference"
        },
        "extensions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "externalizedProperties" : {
          "$ref" : "#/definitions/ExternalPropertyFileReference",
          "originalRef" : "ExternalPropertyFileReference"
        },
        "graphs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "invocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "logicalLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "policies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "taxonomies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "threadFlowLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "translations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "webRequests" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        },
        "webResponses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalPropertyFileReference",
            "originalRef" : "ExternalPropertyFileReference"
          }
        }
      },
      "title" : "ExternalPropertyFileReferences"
    },
    "FalsePostiveNegativeStats" : {
      "type" : "object",
      "properties" : {
        "allTimeFalseNegativeCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "allTimeFalsePositiveCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastScanCount" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "runFalseNegativeCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runFalsePositiveCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runNo" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "FalsePostiveNegativeStats"
    },
    "FinalState" : {
      "type" : "object",
      "title" : "FinalState"
    },
    "Fingerprints" : {
      "type" : "object",
      "title" : "Fingerprints"
    },
    "Fix" : {
      "type" : "object",
      "properties" : {
        "artifactChanges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ArtifactChange",
            "originalRef" : "ArtifactChange"
          }
        },
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "Fix"
    },
    "GlobalMessageStrings" : {
      "type" : "object",
      "title" : "GlobalMessageStrings"
    },
    "Graph" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "edges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Edge",
            "originalRef" : "Edge"
          }
        },
        "nodes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Node",
            "originalRef" : "Node"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "Graph"
    },
    "GraphTraversal" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "edgeTraversals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EdgeTraversal",
            "originalRef" : "EdgeTraversal"
          }
        },
        "immutableState" : {
          "$ref" : "#/definitions/ImmutableState__1",
          "originalRef" : "ImmutableState__1"
        },
        "initialState" : {
          "$ref" : "#/definitions/InitialState__1",
          "originalRef" : "InitialState__1"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "resultGraphIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runGraphIndex" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "GraphTraversal"
    },
    "Hashes" : {
      "type" : "object",
      "title" : "Hashes"
    },
    "Headers" : {
      "type" : "object",
      "title" : "Headers"
    },
    "Headers__1" : {
      "type" : "object",
      "title" : "Headers__1"
    },
    "ITComment" : {
      "type" : "object",
      "properties" : {
        "author" : {
          "type" : "string"
        },
        "avtarURL" : {
          "type" : "string"
        },
        "body" : {
          "type" : "string"
        },
        "commentId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "commentLink" : {
          "type" : "string"
        },
        "creationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "issueId" : {
          "type" : "string"
        },
        "updateAuthor" : {
          "type" : "string"
        },
        "updateDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "title" : "ITComment"
    },
    "ITCommentsTaskResponse" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ITComment",
            "originalRef" : "ITComment"
          }
        },
        "issueId" : {
          "type" : "string"
        },
        "issueStatus" : {
          "type" : "string"
        },
        "issueTrackerProjectName" : {
          "type" : "string"
        },
        "issueTrackerType" : {
          "type" : "string"
        },
        "logs" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "success" : {
          "type" : "boolean"
        }
      },
      "title" : "ITCommentsTaskResponse"
    },
    "ImmutableState" : {
      "type" : "object",
      "title" : "ImmutableState"
    },
    "ImmutableState__1" : {
      "type" : "object",
      "title" : "ImmutableState__1"
    },
    "InitialState" : {
      "type" : "object",
      "title" : "InitialState"
    },
    "InitialState__1" : {
      "type" : "object",
      "title" : "InitialState__1"
    },
    "Invocation" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "arguments" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "commandLine" : {
          "type" : "string"
        },
        "endTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "environmentVariables" : {
          "$ref" : "#/definitions/EnvironmentVariables",
          "originalRef" : "EnvironmentVariables"
        },
        "executableLocation" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "executionSuccessful" : {
          "type" : "boolean"
        },
        "exitCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "exitCodeDescription" : {
          "type" : "string"
        },
        "exitSignalName" : {
          "type" : "string"
        },
        "exitSignalNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "machine" : {
          "type" : "string"
        },
        "notificationConfigurationOverrides" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigurationOverride",
            "originalRef" : "ConfigurationOverride"
          }
        },
        "processId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "processStartFailureMessage" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "responseFiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ArtifactLocation",
            "originalRef" : "ArtifactLocation"
          }
        },
        "ruleConfigurationOverrides" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ConfigurationOverride",
            "originalRef" : "ConfigurationOverride"
          }
        },
        "startTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "stderr" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "stdin" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "stdout" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "stdoutStderr" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "toolConfigurationNotifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Notification",
            "originalRef" : "Notification"
          }
        },
        "toolExecutionNotifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Notification",
            "originalRef" : "Notification"
          }
        },
        "workingDirectory" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        }
      },
      "title" : "Invocation"
    },
    "IssueTracker" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/AccountMinimalDto",
          "originalRef" : "AccountMinimalDto"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "opts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Opt",
            "originalRef" : "Opt"
          }
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "prop1" : {
          "type" : "string"
        },
        "prop2" : {
          "type" : "string"
        },
        "prop3" : {
          "type" : "string"
        },
        "prop4" : {
          "type" : "string"
        },
        "prop5" : {
          "type" : "string"
        },
        "skill" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "ACTIVE", "LAUNCHING", "FAILED", "INACTIVE", "DELETING", "DELETED" ]
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "visibility" : {
          "type" : "string",
          "enum" : [ "PRIVATE", "ORG_PUBLIC" ]
        }
      },
      "title" : "IssueTracker"
    },
    "IssueTrackerSaving" : {
      "type" : "object",
      "properties" : {
        "hourlyBugRate" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hourlyBugValidation" : {
          "type" : "integer",
          "format" : "int32"
        },
        "itid" : {
          "type" : "string"
        },
        "jobId" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "testCaseNumber" : {
          "type" : "string"
        },
        "testSuiteName" : {
          "type" : "string"
        },
        "totalCostSaving" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalHourSaving" : {
          "type" : "integer",
          "format" : "int64"
        },
        "validatedCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "IssueTrackerSaving"
    },
    "IssueTrackerValidationResponse" : {
      "type" : "object",
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "valid" : {
          "type" : "boolean"
        },
        "wrikeFolders" : {
          "type" : "array",
          "items" : {
            "type" : "object"
          }
        }
      },
      "title" : "IssueTrackerValidationResponse"
    },
    "JSONDiff" : {
      "type" : "object",
      "properties" : {
        "additions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "differences" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ValDiff",
            "originalRef" : "ValDiff"
          }
        },
        "different" : {
          "type" : "boolean"
        },
        "missing" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "JSONDiff"
    },
    "Job" : {
      "type" : "object",
      "properties" : {
        "categories" : {
          "type" : "string"
        },
        "closedIssues" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cron" : {
          "type" : "string"
        },
        "defaulton" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "environment" : {
          "$ref" : "#/definitions/Environment",
          "originalRef" : "Environment"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issueTracker" : {
          "$ref" : "#/definitions/JobIssueTracker",
          "originalRef" : "JobIssueTracker"
        },
        "issueTrackerToDo" : {
          "type" : "boolean"
        },
        "logPolicy" : {
          "type" : "string",
          "enum" : [ "DEBUG", "INFO" ]
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "nextFire" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notificationToDo" : {
          "type" : "boolean"
        },
        "notifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JobNotification",
            "originalRef" : "JobNotification"
          }
        },
        "openIssues" : {
          "type" : "integer",
          "format" : "int64"
        },
        "project" : {
          "$ref" : "#/definitions/ProjectMinimalDto",
          "originalRef" : "ProjectMinimalDto"
        },
        "refId" : {
          "type" : "string"
        },
        "regions" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "timeZone" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Job"
    },
    "JobIssueTracker" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "assigneeAccountId" : {
          "type" : "string"
        },
        "folderName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issueType" : {
          "type" : "string"
        },
        "labels" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "projectKey" : {
          "type" : "string"
        },
        "skipLogging" : {
          "type" : "boolean"
        },
        "syncAll" : {
          "type" : "boolean"
        },
        "url" : {
          "type" : "string"
        }
      },
      "title" : "JobIssueTracker"
    },
    "JobNotification" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "channel" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "skipNotification" : {
          "type" : "boolean"
        },
        "to" : {
          "type" : "string"
        }
      },
      "title" : "JobNotification"
    },
    "Location" : {
      "type" : "object",
      "properties" : {
        "annotations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Region",
            "originalRef" : "Region"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "logicalLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LogicalLocation",
            "originalRef" : "LogicalLocation"
          }
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "physicalLocation" : {
          "$ref" : "#/definitions/PhysicalLocation",
          "originalRef" : "PhysicalLocation"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LocationRelationship",
            "originalRef" : "LocationRelationship"
          }
        }
      },
      "title" : "Location"
    },
    "LocationRelationship" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "kinds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "target" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "LocationRelationship"
    },
    "LogicalLocation" : {
      "type" : "object",
      "properties" : {
        "decoratedName" : {
          "type" : "string"
        },
        "fullyQualifiedName" : {
          "type" : "string"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "kind" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "parentIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "LogicalLocation"
    },
    "MFAStatus" : {
      "type" : "object",
      "properties" : {
        "lastDateToEnableUserMfa" : {
          "type" : "string",
          "format" : "date-time"
        },
        "mfaOk" : {
          "type" : "boolean"
        },
        "orgMfaDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "title" : "MFAStatus"
    },
    "MapDto" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "MapDto"
    },
    "Member" : {
      "type" : "object",
      "properties" : {
        "confirmPassword" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "email" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "orgId" : {
          "type" : "string"
        },
        "orgRole" : {
          "type" : "string",
          "enum" : [ "READ", "WRITE", "ADMIN", "USER", "PROJECT_MANAGER", "ENTERPRISE_ADMIN", "BASIC" ]
        },
        "password" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Member"
    },
    "Message" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "INFO", "ERROR", "WARNING" ]
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "Message"
    },
    "MessageStrings" : {
      "type" : "object",
      "title" : "MessageStrings"
    },
    "MultiformatMessageString" : {
      "type" : "object",
      "properties" : {
        "markdown" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "text" : {
          "type" : "string"
        }
      },
      "title" : "MultiformatMessageString"
    },
    "NameDto" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "orgPlan" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "NameDto"
    },
    "Node" : {
      "type" : "object",
      "properties" : {
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Node",
            "originalRef" : "Node"
          }
        },
        "id" : {
          "type" : "string"
        },
        "label" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "location" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "Node"
    },
    "Notification" : {
      "type" : "object",
      "properties" : {
        "associatedRule" : {
          "$ref" : "#/definitions/ReportingDescriptorReference",
          "originalRef" : "ReportingDescriptorReference"
        },
        "descriptor" : {
          "$ref" : "#/definitions/ReportingDescriptorReference",
          "originalRef" : "ReportingDescriptorReference"
        },
        "exception" : {
          "$ref" : "#/definitions/Exception",
          "originalRef" : "Exception"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "none", "note", "warning", "error" ]
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location",
            "originalRef" : "Location"
          }
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "threadId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "timeUtc" : {
          "type" : "string",
          "format" : "date-time"
        }
      },
      "title" : "Notification"
    },
    "Opt" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "label" : {
          "type" : "string"
        },
        "mandatory" : {
          "type" : "boolean"
        },
        "value" : {
          "type" : "string"
        }
      },
      "title" : "Opt"
    },
    "Org" : {
      "type" : "object",
      "properties" : {
        "billingEmail" : {
          "type" : "string"
        },
        "clientId" : {
          "type" : "string"
        },
        "company" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "enterpriseLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "freeLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issuer" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "mfaEnabled" : {
          "type" : "boolean"
        },
        "mfaEnabledDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "oktaEnabled" : {
          "type" : "boolean"
        },
        "orgPlan" : {
          "type" : "string",
          "enum" : [ "FREE", "PRO", "TEAM", "BASIC", "BUSINESS", "ENTERPRISE", "PAY_AS_YOU_GO", "APISEC_CHECK" ]
        },
        "orgTag" : {
          "type" : "string",
          "enum" : [ "PROSPECT", "CUSTOMER", "OPPORTUNITY", "CHURN", "PARTNER" ]
        },
        "orgType" : {
          "type" : "string",
          "enum" : [ "PERSONAL", "TEAM", "ENTERPRISE", "FREE" ]
        },
        "ownerName" : {
          "type" : "string"
        },
        "referrer" : {
          "type" : "string"
        },
        "suiteValidationLimit" : {
          "type" : "integer",
          "format" : "int64"
        },
        "url" : {
          "type" : "string"
        },
        "usedEntLicense" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Org"
    },
    "OrgStats" : {
      "type" : "object",
      "properties" : {
        "activeVulnerabilities" : {
          "type" : "integer",
          "format" : "int64"
        },
        "closedVulnerabilities" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalEndpoints" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPlaybooks" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "OrgStats"
    },
    "OrgUsers" : {
      "type" : "object",
      "properties" : {
        "authFrom" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "OKTA" ]
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "forceResetPwd" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "orgRole" : {
          "type" : "string",
          "enum" : [ "READ", "WRITE", "ADMIN", "USER", "PROJECT_MANAGER", "ENTERPRISE_ADMIN", "BASIC" ]
        },
        "status" : {
          "type" : "string",
          "enum" : [ "INVITED", "ACTIVE", "INACTIVE", "DECLINED", "REMOVED", "ARCHIVED" ]
        },
        "userType" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "MANAGED" ]
        },
        "users" : {
          "$ref" : "#/definitions/UserMinimalDto",
          "originalRef" : "UserMinimalDto"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "OrgUsers"
    },
    "OriginalUriBaseIds" : {
      "type" : "object",
      "title" : "OriginalUriBaseIds"
    },
    "Parameters" : {
      "type" : "object",
      "title" : "Parameters"
    },
    "PartialFingerprints" : {
      "type" : "object",
      "title" : "PartialFingerprints"
    },
    "Payload" : {
      "type" : "object",
      "properties" : {
        "categoryGroup" : {
          "type" : "string",
          "enum" : [ "DEFAULT", "INJECTION", "STORED_INJECTION", "ABAC" ]
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endpoint" : {
          "type" : "string"
        },
        "example" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "locked" : {
          "type" : "boolean"
        },
        "method" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "payload" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Payload"
    },
    "PersonalizedCoverage" : {
      "type" : "object",
      "properties" : {
        "auths" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Auth",
            "originalRef" : "Auth"
          }
        },
        "commandChecks" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "object"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cron" : {
          "type" : "string"
        },
        "databases" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "object"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "string"
        },
        "timeZone" : {
          "type" : "string"
        },
        "tokenExample" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "PersonalizedCoverage"
    },
    "PhysicalLocation" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "$ref" : "#/definitions/Address",
          "originalRef" : "Address"
        },
        "artifactLocation" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "contextRegion" : {
          "$ref" : "#/definitions/Region",
          "originalRef" : "Region"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "region" : {
          "$ref" : "#/definitions/Region",
          "originalRef" : "Region"
        }
      },
      "title" : "PhysicalLocation"
    },
    "PingInfo" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "type" : "string"
        },
        "buildTimeStamp" : {
          "type" : "string"
        }
      },
      "title" : "PingInfo"
    },
    "PlaybookGraph" : {
      "type" : "object",
      "properties" : {
        "day" : {
          "type" : "string"
        },
        "playbookCount" : {
          "type" : "string"
        }
      },
      "title" : "PlaybookGraph"
    },
    "PlaybooksGraph" : {
      "type" : "object",
      "properties" : {
        "playruns" : {
          "type" : "integer",
          "format" : "int32"
        },
        "week" : {
          "type" : "string"
        }
      },
      "title" : "PlaybooksGraph"
    },
    "Policies" : {
      "type" : "object",
      "properties" : {
        "cleanupExec" : {
          "type" : "string"
        },
        "initExec" : {
          "type" : "string"
        },
        "logger" : {
          "type" : "string"
        },
        "postExecutionDelay" : {
          "type" : "integer",
          "format" : "int64"
        },
        "repeat" : {
          "type" : "integer",
          "format" : "int32"
        },
        "repeatDelay" : {
          "type" : "integer",
          "format" : "int64"
        },
        "repeatModule" : {
          "type" : "string"
        },
        "repeatOnFailure" : {
          "type" : "integer",
          "format" : "int32"
        },
        "showResponse" : {
          "type" : "boolean"
        },
        "timeoutSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "unmaskToken" : {
          "type" : "boolean"
        }
      },
      "title" : "Policies"
    },
    "Project" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/AccountMinimalDto",
          "originalRef" : "AccountMinimalDto"
        },
        "activateScheduledReports" : {
          "type" : "boolean"
        },
        "activeGenerators" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "apiGatewayAccountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "apiGatewayId" : {
          "type" : "string"
        },
        "apiId" : {
          "type" : "string"
        },
        "apiType" : {
          "type" : "string"
        },
        "autoGenSuites" : {
          "type" : "integer",
          "format" : "int32"
        },
        "baseUrl" : {
          "type" : "string"
        },
        "branch" : {
          "type" : "string"
        },
        "bugsClosed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "bugsOpen" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coverage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "endpointsCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "entitledUsers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Entitlement",
            "originalRef" : "Entitlement"
          }
        },
        "envReachable" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "isFileLoad" : {
          "type" : "string"
        },
        "issueTracker" : {
          "$ref" : "#/definitions/ProjectIssueTracker",
          "originalRef" : "ProjectIssueTracker"
        },
        "lastCommit" : {
          "type" : "string"
        },
        "lastRunCreation" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastSync" : {
          "type" : "string",
          "format" : "date-time"
        },
        "licenses" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "localOffSet" : {
          "type" : "integer",
          "format" : "int32"
        },
        "manualEpFound" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "noApi" : {
          "type" : "boolean"
        },
        "nonWorkingPlaybooksCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nonWorkingPlaybooksPercentage" : {
          "type" : "number",
          "format" : "float"
        },
        "notifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectNotifications",
            "originalRef" : "ProjectNotifications"
          }
        },
        "openAPISpec" : {
          "type" : "string"
        },
        "openText" : {
          "type" : "string"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "owner" : {
          "type" : "string"
        },
        "personalizedCoverage" : {
          "$ref" : "#/definitions/PersonalizedCoverage",
          "originalRef" : "PersonalizedCoverage"
        },
        "planType" : {
          "type" : "string",
          "enum" : [ "FREE", "PRO", "TEAM", "BASIC", "BUSINESS", "ENTERPRISE", "PAY_AS_YOU_GO", "APISEC_CHECK" ]
        },
        "playbooksCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "props" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "region" : {
          "type" : "string"
        },
        "skipAbac" : {
          "type" : "boolean"
        },
        "skipGitbackup" : {
          "type" : "boolean"
        },
        "source" : {
          "type" : "string",
          "enum" : [ "API", "UI", "API_GATEWAY", "ETHICAL_CHECK", "APISEC_CHECK" ]
        },
        "stage" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "swaggerEditorOas" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "url" : {
          "type" : "string"
        },
        "validation" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Project"
    },
    "ProjectConfiguration" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "generatorType" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "resourceMapping" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "resourceMappingList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MapDto",
            "originalRef" : "MapDto"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ProjectConfiguration"
    },
    "ProjectFile" : {
      "type" : "object",
      "properties" : {
        "autoGenerated" : {
          "type" : "boolean"
        },
        "category" : {
          "type" : "string"
        },
        "checksum" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "filename" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modified" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ProjectFile"
    },
    "ProjectIssueTracker" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "accountType" : {
          "type" : "string",
          "enum" : [ "AWS", "AZURE", "GCP", "BitBucket", "GitHub", "Git", "GitLab", "Self_Hosted", "KeyValue", "Bugzilla", "Pivotal_Tracker", "Service_Now", "GitLab_Issues", "Microsoft_TFS_Git", "Microsoft_VSTS_Git", "Slack", "Email", "Local", "Jira", "FX_Issues", "Http", "No_Issues", "AWS_API_GATEWAY", "AZURE_API_GATEWAY", "AZURE_DevOps", "MuleSoft", "APIGEE_Edge", "Kong_Enterprise", "SoftwareAG_WebMethods", "Trello", "Postman", "AWS_S3", "AZURE_STORAGE", "GOOGLE_CLOUD_STORAGE", "MicrosoftTeams", "WSO2", "IdeaBiz", "JupiterOne", "Wrike", "Linear", "Sftp" ]
        },
        "id" : {
          "type" : "string"
        },
        "issueType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "projectKey" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        }
      },
      "title" : "ProjectIssueTracker"
    },
    "ProjectMinimalDto" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ProjectMinimalDto"
    },
    "ProjectNotifications" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "type" : "string"
        },
        "channel" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "to" : {
          "type" : "string"
        }
      },
      "title" : "ProjectNotifications"
    },
    "ProjectSaving" : {
      "type" : "object",
      "properties" : {
        "autoGenAllSuites" : {
          "type" : "integer",
          "format" : "int32"
        },
        "autoGenSecuritySuites" : {
          "type" : "integer",
          "format" : "int32"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "securityCoverageCostSaving" : {
          "type" : "integer",
          "format" : "int64"
        },
        "securityCoverageTimeSaving" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalCostSaving" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalTimeSaving" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ProjectSaving"
    },
    "ProjectSpec" : {
      "type" : "object",
      "properties" : {
        "apiTitle" : {
          "type" : "string"
        },
        "checksum" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "file" : {
          "type" : "string",
          "format" : "byte"
        },
        "fileData" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "specType" : {
          "type" : "string",
          "enum" : [ "OAS", "RAML", "POSTMAN", "GRAPHQL", "HAR" ]
        },
        "specVersion" : {
          "type" : "number",
          "format" : "double"
        },
        "swaggerVersion" : {
          "type" : "string"
        },
        "totalEndpoints" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ProjectSpec"
    },
    "ProjectStats" : {
      "type" : "object",
      "properties" : {
        "bugsClosed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "bugsOpen" : {
          "type" : "integer",
          "format" : "int64"
        },
        "coverage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "endpointsCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "lastRunCreation" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "nonWorkingPlaybooksCount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "nonWorkingPlaybooksPercentage" : {
          "type" : "number",
          "format" : "float"
        },
        "orgName" : {
          "type" : "string"
        },
        "owner" : {
          "type" : "string"
        },
        "playbooksCount" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ProjectStats"
    },
    "ProjectSync" : {
      "type" : "object",
      "properties" : {
        "categories" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "createCategories" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "deleteAutoGenerated" : {
          "type" : "boolean"
        },
        "deleteCustom" : {
          "type" : "boolean"
        },
        "manualEpSync" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "recreate" : {
          "type" : "boolean"
        },
        "reload" : {
          "type" : "boolean"
        },
        "stopTask" : {
          "type" : "boolean"
        }
      },
      "title" : "ProjectSync"
    },
    "PropertyBag" : {
      "type" : "object",
      "properties" : {
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "PropertyBag"
    },
    "RatingHistory" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "envId" : {
          "type" : "string"
        },
        "envName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32"
        },
        "runId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scripts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "RatingHistory"
    },
    "Rectangle" : {
      "type" : "object",
      "properties" : {
        "bottom" : {
          "type" : "number",
          "format" : "double"
        },
        "left" : {
          "type" : "number",
          "format" : "double"
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "right" : {
          "type" : "number",
          "format" : "double"
        },
        "top" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "Rectangle"
    },
    "Region" : {
      "type" : "object",
      "properties" : {
        "byteLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "byteOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "charLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "charOffset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "endColumn" : {
          "type" : "integer",
          "format" : "int32"
        },
        "endLine" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "snippet" : {
          "$ref" : "#/definitions/ArtifactContent",
          "originalRef" : "ArtifactContent"
        },
        "sourceLanguage" : {
          "type" : "string"
        },
        "startColumn" : {
          "type" : "integer",
          "format" : "int32"
        },
        "startLine" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Region"
    },
    "Replacement" : {
      "type" : "object",
      "properties" : {
        "deletedRegion" : {
          "$ref" : "#/definitions/Region",
          "originalRef" : "Region"
        },
        "insertedContent" : {
          "$ref" : "#/definitions/ArtifactContent",
          "originalRef" : "ArtifactContent"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "Replacement"
    },
    "ReportSetting" : {
      "type" : "object",
      "properties" : {
        "account" : {
          "$ref" : "#/definitions/Account",
          "originalRef" : "Account"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "ReportSetting"
    },
    "ReportingConfiguration" : {
      "type" : "object",
      "properties" : {
        "enabled" : {
          "type" : "boolean"
        },
        "level" : {
          "type" : "string",
          "enum" : [ "none", "note", "warning", "error" ]
        },
        "parameters" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "rank" : {
          "type" : "number",
          "format" : "double"
        }
      },
      "title" : "ReportingConfiguration"
    },
    "ReportingDescriptor" : {
      "type" : "object",
      "properties" : {
        "defaultConfiguration" : {
          "$ref" : "#/definitions/ReportingConfiguration",
          "originalRef" : "ReportingConfiguration"
        },
        "deprecatedGuids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "deprecatedIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "deprecatedNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "fullDescription" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        },
        "guid" : {
          "type" : "string"
        },
        "help" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        },
        "helpUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "id" : {
          "type" : "string"
        },
        "messageStrings" : {
          "$ref" : "#/definitions/MessageStrings",
          "originalRef" : "MessageStrings"
        },
        "name" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportingDescriptorRelationship",
            "originalRef" : "ReportingDescriptorRelationship"
          }
        },
        "shortDescription" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        }
      },
      "title" : "ReportingDescriptor"
    },
    "ReportingDescriptorReference" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "toolComponent" : {
          "$ref" : "#/definitions/ToolComponentReference",
          "originalRef" : "ToolComponentReference"
        }
      },
      "title" : "ReportingDescriptorReference"
    },
    "ReportingDescriptorRelationship" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "kinds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "target" : {
          "$ref" : "#/definitions/ReportingDescriptorReference",
          "originalRef" : "ReportingDescriptorReference"
        }
      },
      "title" : "ReportingDescriptorRelationship"
    },
    "ResourceDefinition" : {
      "type" : "object",
      "properties" : {
        "definition" : {
          "type" : "string"
        },
        "dependency" : {
          "type" : "string"
        },
        "endpoints" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Endpoint",
            "originalRef" : "Endpoint"
          }
        },
        "enumValues" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "path" : {
          "type" : "string"
        },
        "projectId" : {
          "type" : "string"
        },
        "resourceName" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "string"
        },
        "typeThreeDefination" : {
          "type" : "string"
        },
        "typeThreePath" : {
          "type" : "string"
        }
      },
      "title" : "ResourceDefinition"
    },
    "Response«APICoverageDetails»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/APICoverageDetails",
          "originalRef" : "APICoverageDetails"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«APICoverageDetails»"
    },
    "Response«APICoverageMatrix»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/APICoverageMatrix",
          "originalRef" : "APICoverageMatrix"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«APICoverageMatrix»"
    },
    "Response«AbacResource»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AbacResource",
          "originalRef" : "AbacResource"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«AbacResource»"
    },
    "Response«Account»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Account",
          "originalRef" : "Account"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Account»"
    },
    "Response«Alert»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Alert",
          "originalRef" : "Alert"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Alert»"
    },
    "Response«AutoCodeConfig»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AutoCodeConfig",
          "originalRef" : "AutoCodeConfig"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«AutoCodeConfig»"
    },
    "Response«AutoCodeGenerator»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AutoCodeGenerator",
          "originalRef" : "AutoCodeGenerator"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«AutoCodeGenerator»"
    },
    "Response«AutoSuggestion»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/AutoSuggestion",
          "originalRef" : "AutoSuggestion"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«AutoSuggestion»"
    },
    "Response«BugsCounts»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/BugsCounts",
          "originalRef" : "BugsCounts"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«BugsCounts»"
    },
    "Response«Cluster»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Cluster",
          "originalRef" : "Cluster"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Cluster»"
    },
    "Response«CustomGenerator»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/CustomGenerator",
          "originalRef" : "CustomGenerator"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«CustomGenerator»"
    },
    "Response«Dashboard»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Dashboard",
          "originalRef" : "Dashboard"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Dashboard»"
    },
    "Response«DataRecord»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/DataRecord",
          "originalRef" : "DataRecord"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«DataRecord»"
    },
    "Response«DataSet»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/DataSet",
          "originalRef" : "DataSet"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«DataSet»"
    },
    "Response«DefaultIntegration»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/DefaultIntegration",
          "originalRef" : "DefaultIntegration"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«DefaultIntegration»"
    },
    "Response«Environment»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Environment",
          "originalRef" : "Environment"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Environment»"
    },
    "Response«Event»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Event",
          "originalRef" : "Event"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Event»"
    },
    "Response«FalsePostiveNegativeStats»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/FalsePostiveNegativeStats",
          "originalRef" : "FalsePostiveNegativeStats"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«FalsePostiveNegativeStats»"
    },
    "Response«ITCommentsTaskResponse»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ITCommentsTaskResponse",
          "originalRef" : "ITCommentsTaskResponse"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ITCommentsTaskResponse»"
    },
    "Response«IssueTrackerSaving»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/IssueTrackerSaving",
          "originalRef" : "IssueTrackerSaving"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«IssueTrackerSaving»"
    },
    "Response«IssueTrackerValidationResponse»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/IssueTrackerValidationResponse",
          "originalRef" : "IssueTrackerValidationResponse"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«IssueTrackerValidationResponse»"
    },
    "Response«IssueTracker»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/IssueTracker",
          "originalRef" : "IssueTracker"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«IssueTracker»"
    },
    "Response«JSONDiff»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/JSONDiff",
          "originalRef" : "JSONDiff"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«JSONDiff»"
    },
    "Response«Job»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Job",
          "originalRef" : "Job"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Job»"
    },
    "Response«List«APIGatewayTaskResponse»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/APIGatewayTaskResponse",
            "originalRef" : "APIGatewayTaskResponse"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«APIGatewayTaskResponse»»"
    },
    "Response«List«AbacResource»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AbacResource",
            "originalRef" : "AbacResource"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«AbacResource»»"
    },
    "Response«List«Account»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Account",
            "originalRef" : "Account"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Account»»"
    },
    "Response«List«Activity»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Activity",
            "originalRef" : "Activity"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Activity»»"
    },
    "Response«List«Alert»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Alert",
            "originalRef" : "Alert"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Alert»»"
    },
    "Response«List«Array«object»»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Array«object»»»"
    },
    "Response«List«AutoCodeGenerator»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoCodeGenerator",
            "originalRef" : "AutoCodeGenerator"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«AutoCodeGenerator»»"
    },
    "Response«List«AutoSuggestionCountSnapshot»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoSuggestionCountSnapshot",
            "originalRef" : "AutoSuggestionCountSnapshot"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«AutoSuggestionCountSnapshot»»"
    },
    "Response«List«AutoSuggestionMinimal»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoSuggestionMinimal",
            "originalRef" : "AutoSuggestionMinimal"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«AutoSuggestionMinimal»»"
    },
    "Response«List«AutoSuggestionReport»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoSuggestionReport",
            "originalRef" : "AutoSuggestionReport"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«AutoSuggestionReport»»"
    },
    "Response«List«AutoSuggestion»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AutoSuggestion",
            "originalRef" : "AutoSuggestion"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«AutoSuggestion»»"
    },
    "Response«List«CategoryAttributes»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CategoryAttributes",
            "originalRef" : "CategoryAttributes"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«CategoryAttributes»»"
    },
    "Response«List«CategoryRatingHistory»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CategoryRatingHistory",
            "originalRef" : "CategoryRatingHistory"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«CategoryRatingHistory»»"
    },
    "Response«List«Cluster»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Cluster",
            "originalRef" : "Cluster"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Cluster»»"
    },
    "Response«List«CustomGenerator»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomGenerator",
            "originalRef" : "CustomGenerator"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«CustomGenerator»»"
    },
    "Response«List«DataRecord»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataRecord",
            "originalRef" : "DataRecord"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«DataRecord»»"
    },
    "Response«List«DataSet»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataSet",
            "originalRef" : "DataSet"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«DataSet»»"
    },
    "Response«List«DefaultIntegration»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DefaultIntegration",
            "originalRef" : "DefaultIntegration"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«DefaultIntegration»»"
    },
    "Response«List«EndpointResource»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EndpointResource",
            "originalRef" : "EndpointResource"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«EndpointResource»»"
    },
    "Response«List«Endpoint»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Endpoint",
            "originalRef" : "Endpoint"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Endpoint»»"
    },
    "Response«List«Environment»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Environment",
            "originalRef" : "Environment"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Environment»»"
    },
    "Response«List«Event»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Event",
            "originalRef" : "Event"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Event»»"
    },
    "Response«List«IssueTracker»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IssueTracker",
            "originalRef" : "IssueTracker"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«IssueTracker»»"
    },
    "Response«List«Job»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Job",
            "originalRef" : "Job"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Job»»"
    },
    "Response«List«Notification»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Notification",
            "originalRef" : "Notification"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Notification»»"
    },
    "Response«List«OrgUsers»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OrgUsers",
            "originalRef" : "OrgUsers"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«OrgUsers»»"
    },
    "Response«List«Org»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Org",
            "originalRef" : "Org"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Org»»"
    },
    "Response«List«Payload»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Payload",
            "originalRef" : "Payload"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Payload»»"
    },
    "Response«List«PlaybookGraph»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlaybookGraph",
            "originalRef" : "PlaybookGraph"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«PlaybookGraph»»"
    },
    "Response«List«PlaybooksGraph»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PlaybooksGraph",
            "originalRef" : "PlaybooksGraph"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«PlaybooksGraph»»"
    },
    "Response«List«ProjectFile»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectFile",
            "originalRef" : "ProjectFile"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«ProjectFile»»"
    },
    "Response«List«ProjectSpec»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectSpec",
            "originalRef" : "ProjectSpec"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«ProjectSpec»»"
    },
    "Response«List«ProjectStats»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProjectStats",
            "originalRef" : "ProjectStats"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«ProjectStats»»"
    },
    "Response«List«Project»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Project",
            "originalRef" : "Project"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Project»»"
    },
    "Response«List«ResourceDefinition»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ResourceDefinition",
            "originalRef" : "ResourceDefinition"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«ResourceDefinition»»"
    },
    "Response«List«Run»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Run",
            "originalRef" : "Run"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Run»»"
    },
    "Response«List«Skill»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Skill",
            "originalRef" : "Skill"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Skill»»"
    },
    "Response«List«SuggestionCounts»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SuggestionCounts",
            "originalRef" : "SuggestionCounts"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«SuggestionCounts»»"
    },
    "Response«List«Suite»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Suite",
            "originalRef" : "Suite"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Suite»»"
    },
    "Response«List«SystemSetting»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SystemSetting",
            "originalRef" : "SystemSetting"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«SystemSetting»»"
    },
    "Response«List«TestCaseResponseIssueTracker»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestCaseResponseIssueTracker",
            "originalRef" : "TestCaseResponseIssueTracker"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«TestCaseResponseIssueTracker»»"
    },
    "Response«List«TestSuiteCountSnapshot»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuiteCountSnapshot",
            "originalRef" : "TestSuiteCountSnapshot"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«TestSuiteCountSnapshot»»"
    },
    "Response«List«TestSuiteCount»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuiteCount",
            "originalRef" : "TestSuiteCount"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«TestSuiteCount»»"
    },
    "Response«List«TestSuiteResponse»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuiteResponse",
            "originalRef" : "TestSuiteResponse"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«TestSuiteResponse»»"
    },
    "Response«List«TestSuite»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestSuite",
            "originalRef" : "TestSuite"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«TestSuite»»"
    },
    "Response«List«UserVariable»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/UserVariable",
            "originalRef" : "UserVariable"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«UserVariable»»"
    },
    "Response«List«VulnerabilitesGraph»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VulnerabilitesGraph",
            "originalRef" : "VulnerabilitesGraph"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«VulnerabilitesGraph»»"
    },
    "Response«List«VulnerabilitiesBySeverity»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VulnerabilitiesBySeverity",
            "originalRef" : "VulnerabilitiesBySeverity"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«VulnerabilitiesBySeverity»»"
    },
    "Response«List«Vulnerability»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Vulnerability",
            "originalRef" : "Vulnerability"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«Vulnerability»»"
    },
    "Response«List«VulnerableEndpoint»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/VulnerableEndpoint",
            "originalRef" : "VulnerableEndpoint"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«VulnerableEndpoint»»"
    },
    "Response«List«string»»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«List«string»»"
    },
    "Response«MFAStatus»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/MFAStatus",
          "originalRef" : "MFAStatus"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«MFAStatus»"
    },
    "Response«Notification»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Notification",
          "originalRef" : "Notification"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Notification»"
    },
    "Response«OrgStats»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/OrgStats",
          "originalRef" : "OrgStats"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«OrgStats»"
    },
    "Response«OrgUsers»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/OrgUsers",
          "originalRef" : "OrgUsers"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«OrgUsers»"
    },
    "Response«Org»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Org",
          "originalRef" : "Org"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Org»"
    },
    "Response«Payload»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Payload",
          "originalRef" : "Payload"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Payload»"
    },
    "Response«PersonalizedCoverage»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/PersonalizedCoverage",
          "originalRef" : "PersonalizedCoverage"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«PersonalizedCoverage»"
    },
    "Response«PingInfo»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/PingInfo",
          "originalRef" : "PingInfo"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«PingInfo»"
    },
    "Response«ProjectConfiguration»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ProjectConfiguration",
          "originalRef" : "ProjectConfiguration"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ProjectConfiguration»"
    },
    "Response«ProjectFile»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ProjectFile",
          "originalRef" : "ProjectFile"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ProjectFile»"
    },
    "Response«ProjectSaving»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ProjectSaving",
          "originalRef" : "ProjectSaving"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ProjectSaving»"
    },
    "Response«ProjectSpec»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ProjectSpec",
          "originalRef" : "ProjectSpec"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ProjectSpec»"
    },
    "Response«Project»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Project",
          "originalRef" : "Project"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Project»"
    },
    "Response«RatingHistory»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/RatingHistory",
          "originalRef" : "RatingHistory"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«RatingHistory»"
    },
    "Response«ReportSetting»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ReportSetting",
          "originalRef" : "ReportSetting"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ReportSetting»"
    },
    "Response«ResourceDefinition»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/ResourceDefinition",
          "originalRef" : "ResourceDefinition"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«ResourceDefinition»"
    },
    "Response«RunResultStats»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/RunResultStats",
          "originalRef" : "RunResultStats"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«RunResultStats»"
    },
    "Response«RunSavings»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/RunSavings",
          "originalRef" : "RunSavings"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«RunSavings»"
    },
    "Response«Run»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Run",
          "originalRef" : "Run"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Run»"
    },
    "Response«SarifSchema210»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/SarifSchema210",
          "originalRef" : "SarifSchema210"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«SarifSchema210»"
    },
    "Response«Saving»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Saving",
          "originalRef" : "Saving"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Saving»"
    },
    "Response«Skill»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Skill",
          "originalRef" : "Skill"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Skill»"
    },
    "Response«Stats»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Stats",
          "originalRef" : "Stats"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Stats»"
    },
    "Response«SubscriptionTier»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/SubscriptionTier",
          "originalRef" : "SubscriptionTier"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«SubscriptionTier»"
    },
    "Response«SystemSetting»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/SystemSetting",
          "originalRef" : "SystemSetting"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«SystemSetting»"
    },
    "Response«TestSuiteResponse»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/TestSuiteResponse",
          "originalRef" : "TestSuiteResponse"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«TestSuiteResponse»"
    },
    "Response«TestSuite»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/TestSuite",
          "originalRef" : "TestSuite"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«TestSuite»"
    },
    "Response«UserVariable»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/UserVariable",
          "originalRef" : "UserVariable"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«UserVariable»"
    },
    "Response«Users»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/Users",
          "originalRef" : "Users"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«Users»"
    },
    "Response«VulnerabilityBySeverity»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "$ref" : "#/definitions/VulnerabilityBySeverity",
          "originalRef" : "VulnerabilityBySeverity"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«VulnerabilityBySeverity»"
    },
    "Response«boolean»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "boolean"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«boolean»"
    },
    "Response«long»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "integer",
          "format" : "int64"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«long»"
    },
    "Response«object»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "object"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«object»"
    },
    "Response«string»" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "string"
        },
        "errors" : {
          "type" : "boolean"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Message",
            "originalRef" : "Message"
          }
        },
        "requestId" : {
          "type" : "string"
        },
        "requestTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "totalElements" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "Response«string»"
    },
    "Result" : {
      "type" : "object",
      "properties" : {
        "analysisTarget" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "attachments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Attachment",
            "originalRef" : "Attachment"
          }
        },
        "baselineState" : {
          "type" : "string",
          "enum" : [ "new", "unchanged", "updated", "absent" ]
        },
        "codeFlows" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CodeFlow",
            "originalRef" : "CodeFlow"
          }
        },
        "correlationGuid" : {
          "type" : "string"
        },
        "fingerprints" : {
          "$ref" : "#/definitions/Fingerprints",
          "originalRef" : "Fingerprints"
        },
        "fixes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Fix",
            "originalRef" : "Fix"
          }
        },
        "graphTraversals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GraphTraversal",
            "originalRef" : "GraphTraversal"
          }
        },
        "graphs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Graph",
            "originalRef" : "Graph"
          }
        },
        "guid" : {
          "type" : "string"
        },
        "hostedViewerUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "kind" : {
          "type" : "string",
          "enum" : [ "notApplicable", "pass", "fail", "review", "open", "informational" ]
        },
        "level" : {
          "type" : "string",
          "enum" : [ "none", "note", "warning", "error" ]
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location",
            "originalRef" : "Location"
          }
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "occurrenceCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "partialFingerprints" : {
          "$ref" : "#/definitions/PartialFingerprints",
          "originalRef" : "PartialFingerprints"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "provenance" : {
          "$ref" : "#/definitions/ResultProvenance",
          "originalRef" : "ResultProvenance"
        },
        "rank" : {
          "type" : "number",
          "format" : "double"
        },
        "relatedLocations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Location",
            "originalRef" : "Location"
          }
        },
        "rule" : {
          "$ref" : "#/definitions/ReportingDescriptorReference",
          "originalRef" : "ReportingDescriptorReference"
        },
        "ruleId" : {
          "type" : "string"
        },
        "ruleIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "stacks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Stack",
            "originalRef" : "Stack"
          }
        },
        "suppressions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Suppression",
            "originalRef" : "Suppression"
          }
        },
        "taxa" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportingDescriptorReference",
            "originalRef" : "ReportingDescriptorReference"
          }
        },
        "webRequest" : {
          "$ref" : "#/definitions/WebRequest",
          "originalRef" : "WebRequest"
        },
        "webResponse" : {
          "$ref" : "#/definitions/WebResponse",
          "originalRef" : "WebResponse"
        },
        "workItemUris" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URI",
            "originalRef" : "URI"
          }
        }
      },
      "title" : "Result"
    },
    "ResultProvenance" : {
      "type" : "object",
      "properties" : {
        "conversionSources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PhysicalLocation",
            "originalRef" : "PhysicalLocation"
          }
        },
        "firstDetectionRunGuid" : {
          "type" : "string"
        },
        "firstDetectionTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "invocationIndex" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastDetectionRunGuid" : {
          "type" : "string"
        },
        "lastDetectionTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "ResultProvenance"
    },
    "Run" : {
      "type" : "object",
      "properties" : {
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ciCdStatus" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "environment" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "job" : {
          "$ref" : "#/definitions/Job",
          "originalRef" : "Job"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "regions" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "stats" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "task" : {
          "$ref" : "#/definitions/RunTask",
          "originalRef" : "RunTask"
        },
        "userId" : {
          "type" : "string"
        },
        "validations" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Run"
    },
    "RunAutomationDetails" : {
      "type" : "object",
      "properties" : {
        "correlationGuid" : {
          "type" : "string"
        },
        "description" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "guid" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "RunAutomationDetails"
    },
    "RunResultStats" : {
      "type" : "object",
      "properties" : {
        "closedVuls" : {
          "type" : "integer",
          "format" : "int64"
        },
        "failed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "falseNegatives" : {
          "type" : "integer",
          "format" : "int64"
        },
        "falsePositives" : {
          "type" : "integer",
          "format" : "int64"
        },
        "newOpenedVuls" : {
          "type" : "integer",
          "format" : "int64"
        },
        "passed" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "RunResultStats"
    },
    "RunSavings" : {
      "type" : "object",
      "properties" : {
        "costSaved" : {
          "type" : "integer",
          "format" : "int64"
        },
        "job" : {
          "$ref" : "#/definitions/Job",
          "originalRef" : "Job"
        },
        "runId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeSaved" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "RunSavings"
    },
    "RunTask" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "failedTests" : {
          "type" : "integer",
          "format" : "int64"
        },
        "issuesClosed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "issuesLogged" : {
          "type" : "integer",
          "format" : "int64"
        },
        "issuesReopen" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "skippedTests" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "WAITING", "PROCESSING", "COMPLETED", "FAIL", "TIMEOUT", "STOPPED" ]
        },
        "timeSaved" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timeTaken" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalOpenIssues" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalSuiteCompleted" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalTestCompleted" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalTests" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalTime" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "RunTask"
    },
    "SarifSchema210" : {
      "type" : "object",
      "properties" : {
        "$schema" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "inlineExternalProperties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ExternalProperties",
            "originalRef" : "ExternalProperties"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "runs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Run",
            "originalRef" : "Run"
          }
        },
        "version" : {
          "type" : "string",
          "enum" : [ "2.1.0" ]
        }
      },
      "title" : "SarifSchema210"
    },
    "Saving" : {
      "type" : "object",
      "properties" : {
        "calMonths" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "licenseSaving" : {
          "type" : "integer",
          "format" : "int32"
        },
        "managedInstanceSaving" : {
          "type" : "integer",
          "format" : "int32"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "total" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Saving"
    },
    "Skill" : {
      "type" : "object",
      "properties" : {
        "accessKey" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "key" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "opts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Opt",
            "originalRef" : "Opt"
          }
        },
        "org" : {
          "$ref" : "#/definitions/NameDto",
          "originalRef" : "NameDto"
        },
        "prop1" : {
          "type" : "string"
        },
        "prop2" : {
          "type" : "string"
        },
        "prop3" : {
          "type" : "string"
        },
        "prop4" : {
          "type" : "string"
        },
        "prop5" : {
          "type" : "string"
        },
        "secretKey" : {
          "type" : "string"
        },
        "skillType" : {
          "type" : "string",
          "enum" : [ "VERSION_CONTROL", "BOT_DEPLOYMENT", "ISSUE_TRACKER", "NOTIFICATION", "ANALYTICS" ]
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Skill"
    },
    "SpecialLocations" : {
      "type" : "object",
      "properties" : {
        "displayBase" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "SpecialLocations"
    },
    "Stack" : {
      "type" : "object",
      "properties" : {
        "frames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/StackFrame",
            "originalRef" : "StackFrame"
          }
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "Stack"
    },
    "StackFrame" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location"
        },
        "module" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "threadId" : {
          "type" : "integer",
          "format" : "int32"
        }
      },
      "title" : "StackFrame"
    },
    "State" : {
      "type" : "object",
      "title" : "State"
    },
    "Stats" : {
      "type" : "object",
      "properties" : {
        "totalCloseVul" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalExecution" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalOpneVul" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPlaybooks" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Stats"
    },
    "SubscriptionTier" : {
      "type" : "object",
      "properties" : {
        "availableEntLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "availableFreeLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "orgEntPlan" : {
          "type" : "string",
          "enum" : [ "FREE", "PRO", "TEAM", "BASIC", "BUSINESS", "ENTERPRISE", "PAY_AS_YOU_GO", "APISEC_CHECK" ]
        },
        "orgFreePlan" : {
          "type" : "string",
          "enum" : [ "FREE", "PRO", "TEAM", "BASIC", "BUSINESS", "ENTERPRISE", "PAY_AS_YOU_GO", "APISEC_CHECK" ]
        },
        "purchaseEntLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "purchaseFreeLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "usedEntLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "usedFreeLicense" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "SubscriptionTier"
    },
    "SuggestionCounts" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "estimate" : {
          "type" : "number",
          "format" : "double"
        },
        "groupBy" : {
          "type" : "object"
        },
        "label" : {
          "type" : "string"
        },
        "owaspRank" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      },
      "title" : "SuggestionCounts"
    },
    "Suite" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "errorResultStatus" : {
          "type" : "string",
          "enum" : [ "FALSE_POSITIVE", "FALSE_NEGATIVE" ]
        },
        "failed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "flaggedByAi" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string"
        },
        "rank" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        },
        "size" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "statusCode" : {
          "type" : "string"
        },
        "suiteName" : {
          "type" : "string"
        },
        "testSuiteId" : {
          "type" : "string"
        },
        "tests" : {
          "type" : "integer",
          "format" : "int64"
        },
        "time" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Suite"
    },
    "Suppression" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string"
        },
        "justification" : {
          "type" : "string"
        },
        "kind" : {
          "type" : "string",
          "enum" : [ "inSource", "external" ]
        },
        "location" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "accepted", "underReview", "rejected" ]
        }
      },
      "title" : "Suppression"
    },
    "SystemSetting" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "key" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "SystemSetting"
    },
    "TestCase" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inactive" : {
          "type" : "boolean"
        }
      },
      "title" : "TestCase"
    },
    "TestCaseResponseIssueTracker" : {
      "type" : "object",
      "properties" : {
        "auth" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "issueId" : {
          "type" : "string"
        },
        "jobId" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "testCaseNumber" : {
          "type" : "string"
        },
        "testSuiteName" : {
          "type" : "string"
        },
        "validations" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "TestCaseResponseIssueTracker"
    },
    "TestSuite" : {
      "type" : "object",
      "properties" : {
        "assertions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "assertionsText" : {
          "type" : "string"
        },
        "auth" : {
          "type" : "string"
        },
        "authors" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "authorsText" : {
          "type" : "string"
        },
        "autoGenerated" : {
          "type" : "boolean"
        },
        "category" : {
          "type" : "string"
        },
        "categoryDisplayLabel" : {
          "type" : "string"
        },
        "cleanup" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "cleanupText" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "description" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        },
        "headers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "headersText" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "init" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "initText" : {
          "type" : "string"
        },
        "localVariables" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "localVariablesText" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string",
          "enum" : [ "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE", "MOCK" ]
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "parent" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "policies" : {
          "$ref" : "#/definitions/Policies",
          "originalRef" : "Policies"
        },
        "project" : {
          "$ref" : "#/definitions/Project",
          "originalRef" : "Project"
        },
        "props" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "publishToMarketplace" : {
          "type" : "boolean"
        },
        "reviewStatus" : {
          "type" : "string",
          "enum" : [ "AUTO", "MANUAL", "PENDING", "NEW" ]
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "tagsText" : {
          "type" : "string"
        },
        "testCases" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TestCase",
            "originalRef" : "TestCase"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "SUITE", "ABSTRACT", "DATASET", "CONSULTING_SERVICES", "AI_SKILLS" ]
        },
        "useCategoryAssertion" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        },
        "yaml" : {
          "type" : "string"
        }
      },
      "title" : "TestSuite"
    },
    "TestSuiteCount" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "groupBy" : {
          "type" : "object"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "label" : {
          "type" : "string"
        },
        "owaspRank" : {
          "type" : "string"
        },
        "percentage" : {
          "type" : "number",
          "format" : "float"
        },
        "type" : {
          "type" : "string"
        }
      },
      "title" : "TestSuiteCount"
    },
    "TestSuiteCountSnapshot" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "snapshotDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "tsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "TestSuiteCountSnapshot"
    },
    "TestSuiteResponse" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "logs" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "projectId" : {
          "type" : "string"
        },
        "region" : {
          "type" : "string"
        },
        "requestEndTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "requestStartTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "requestTime" : {
          "type" : "integer",
          "format" : "int64"
        },
        "response" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "runNo" : {
          "type" : "integer",
          "format" : "int64"
        },
        "severity" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "testSuite" : {
          "type" : "string"
        },
        "tests" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalFailed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalPassed" : {
          "type" : "integer",
          "format" : "int64"
        },
        "totalSkipped" : {
          "type" : "integer",
          "format" : "int64"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "TestSuiteResponse"
    },
    "TestSuitesDeletedDto" : {
      "type" : "object",
      "properties" : {
        "deletedFileNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "projectId" : {
          "type" : "string"
        }
      },
      "title" : "TestSuitesDeletedDto"
    },
    "ThreadFlow" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "immutableState" : {
          "$ref" : "#/definitions/ImmutableState",
          "originalRef" : "ImmutableState"
        },
        "initialState" : {
          "$ref" : "#/definitions/InitialState",
          "originalRef" : "InitialState"
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ThreadFlowLocation",
            "originalRef" : "ThreadFlowLocation"
          }
        },
        "message" : {
          "$ref" : "#/definitions/Message",
          "originalRef" : "Message"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "ThreadFlow"
    },
    "ThreadFlowLocation" : {
      "type" : "object",
      "properties" : {
        "executionOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "executionTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "importance" : {
          "type" : "string",
          "enum" : [ "important", "essential", "unimportant" ]
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "kinds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "location" : {
          "$ref" : "#/definitions/Location",
          "originalRef" : "Location"
        },
        "module" : {
          "type" : "string"
        },
        "nestingLevel" : {
          "type" : "integer",
          "format" : "int32"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "stack" : {
          "$ref" : "#/definitions/Stack",
          "originalRef" : "Stack"
        },
        "state" : {
          "$ref" : "#/definitions/State",
          "originalRef" : "State"
        },
        "taxa" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportingDescriptorReference",
            "originalRef" : "ReportingDescriptorReference"
          }
        },
        "webRequest" : {
          "$ref" : "#/definitions/WebRequest",
          "originalRef" : "WebRequest"
        },
        "webResponse" : {
          "$ref" : "#/definitions/WebResponse",
          "originalRef" : "WebResponse"
        }
      },
      "title" : "ThreadFlowLocation"
    },
    "Tool" : {
      "type" : "object",
      "properties" : {
        "driver" : {
          "$ref" : "#/definitions/ToolComponent",
          "originalRef" : "ToolComponent"
        },
        "extensions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ToolComponent",
            "originalRef" : "ToolComponent"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "Tool"
    },
    "ToolComponent" : {
      "type" : "object",
      "properties" : {
        "associatedComponent" : {
          "$ref" : "#/definitions/ToolComponentReference",
          "originalRef" : "ToolComponentReference"
        },
        "contents" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "localizedData", "nonLocalizedData" ]
          }
        },
        "dottedQuadFileVersion" : {
          "type" : "string"
        },
        "downloadUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "fullDescription" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        },
        "fullName" : {
          "type" : "string"
        },
        "globalMessageStrings" : {
          "$ref" : "#/definitions/GlobalMessageStrings",
          "originalRef" : "GlobalMessageStrings"
        },
        "guid" : {
          "type" : "string"
        },
        "informationUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "isComprehensive" : {
          "type" : "boolean"
        },
        "language" : {
          "type" : "string"
        },
        "localizedDataSemanticVersion" : {
          "type" : "string"
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ArtifactLocation",
            "originalRef" : "ArtifactLocation"
          }
        },
        "minimumRequiredLocalizedDataSemanticVersion" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "notifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportingDescriptor",
            "originalRef" : "ReportingDescriptor"
          }
        },
        "organization" : {
          "type" : "string"
        },
        "product" : {
          "type" : "string"
        },
        "productSuite" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "releaseDateUtc" : {
          "type" : "string"
        },
        "rules" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportingDescriptor",
            "originalRef" : "ReportingDescriptor"
          }
        },
        "semanticVersion" : {
          "type" : "string"
        },
        "shortDescription" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        },
        "supportedTaxonomies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ToolComponentReference",
            "originalRef" : "ToolComponentReference"
          }
        },
        "taxa" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ReportingDescriptor",
            "originalRef" : "ReportingDescriptor"
          }
        },
        "translationMetadata" : {
          "$ref" : "#/definitions/TranslationMetadata",
          "originalRef" : "TranslationMetadata"
        },
        "version" : {
          "type" : "string"
        }
      },
      "title" : "ToolComponent"
    },
    "ToolComponentReference" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        }
      },
      "title" : "ToolComponentReference"
    },
    "TranslationMetadata" : {
      "type" : "object",
      "properties" : {
        "downloadUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "fullDescription" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        },
        "fullName" : {
          "type" : "string"
        },
        "informationUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "name" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "shortDescription" : {
          "$ref" : "#/definitions/MultiformatMessageString",
          "originalRef" : "MultiformatMessageString"
        }
      },
      "title" : "TranslationMetadata"
    },
    "URI" : {
      "type" : "object",
      "properties" : {
        "absolute" : {
          "type" : "boolean"
        },
        "authority" : {
          "type" : "string"
        },
        "fragment" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        },
        "opaque" : {
          "type" : "boolean"
        },
        "path" : {
          "type" : "string"
        },
        "port" : {
          "type" : "integer",
          "format" : "int32"
        },
        "query" : {
          "type" : "string"
        },
        "rawAuthority" : {
          "type" : "string"
        },
        "rawFragment" : {
          "type" : "string"
        },
        "rawPath" : {
          "type" : "string"
        },
        "rawQuery" : {
          "type" : "string"
        },
        "rawSchemeSpecificPart" : {
          "type" : "string"
        },
        "rawUserInfo" : {
          "type" : "string"
        },
        "scheme" : {
          "type" : "string"
        },
        "schemeSpecificPart" : {
          "type" : "string"
        },
        "userInfo" : {
          "type" : "string"
        }
      },
      "title" : "URI"
    },
    "UserMinimalDto" : {
      "type" : "object",
      "properties" : {
        "company" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "email" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "mfa" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "qrCode" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "UserMinimalDto"
    },
    "UserVariable" : {
      "type" : "object",
      "properties" : {
        "comments" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "environment" : {
          "$ref" : "#/definitions/Environment",
          "originalRef" : "Environment"
        },
        "format" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "organization" : {
          "$ref" : "#/definitions/Org",
          "originalRef" : "Org"
        },
        "project" : {
          "$ref" : "#/definitions/Project",
          "originalRef" : "Project"
        },
        "scope" : {
          "type" : "string",
          "enum" : [ "PROJECT", "ENVIRONMENT" ]
        },
        "type" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "UserVariable"
    },
    "Users" : {
      "type" : "object",
      "properties" : {
        "accountNonExpired" : {
          "type" : "boolean"
        },
        "accountNonLocked" : {
          "type" : "boolean"
        },
        "company" : {
          "type" : "string"
        },
        "createdBy" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "credentialsNonExpired" : {
          "type" : "boolean"
        },
        "email" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "inactive" : {
          "type" : "boolean"
        },
        "jobTitle" : {
          "type" : "string"
        },
        "lastAccessTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "location" : {
          "type" : "string"
        },
        "mfa" : {
          "type" : "boolean"
        },
        "mfaEnabledAtOrg" : {
          "type" : "boolean"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "name" : {
          "type" : "string"
        },
        "otp" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "privileges" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "qrCode" : {
          "type" : "string"
        },
        "secret" : {
          "type" : "string"
        },
        "successfulLoginAttempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "unsuccessfulLoginAttempts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "Users"
    },
    "ValDiff" : {
      "type" : "object",
      "properties" : {
        "field" : {
          "type" : "string"
        },
        "newVal" : {
          "type" : "string"
        },
        "oldVal" : {
          "type" : "string"
        }
      },
      "title" : "ValDiff"
    },
    "VersionControlDetails" : {
      "type" : "object",
      "properties" : {
        "asOfTimeUtc" : {
          "type" : "string",
          "format" : "date-time"
        },
        "branch" : {
          "type" : "string"
        },
        "mappedTo" : {
          "$ref" : "#/definitions/ArtifactLocation",
          "originalRef" : "ArtifactLocation"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "repositoryUri" : {
          "$ref" : "#/definitions/URI",
          "originalRef" : "URI"
        },
        "revisionId" : {
          "type" : "string"
        },
        "revisionTag" : {
          "type" : "string"
        }
      },
      "title" : "VersionControlDetails"
    },
    "VulnerabilitesGraph" : {
      "type" : "object",
      "properties" : {
        "close" : {
          "type" : "integer",
          "format" : "int32"
        },
        "open" : {
          "type" : "integer",
          "format" : "int32"
        },
        "week" : {
          "type" : "string"
        }
      },
      "title" : "VulnerabilitesGraph"
    },
    "VulnerabilitiesBySeverity" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "severity" : {
          "type" : "string"
        }
      },
      "title" : "VulnerabilitiesBySeverity"
    },
    "Vulnerability" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "cvss" : {
          "type" : "string"
        },
        "environmentBaseUrl" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "issueDescription" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "owaspRank" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "remediation" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "wireLogs" : {
          "type" : "string"
        }
      },
      "title" : "Vulnerability"
    },
    "VulnerabilityBySeverity" : {
      "type" : "object",
      "properties" : {
        "critical" : {
          "type" : "integer",
          "format" : "int64"
        },
        "high" : {
          "type" : "integer",
          "format" : "int64"
        },
        "low" : {
          "type" : "integer",
          "format" : "int64"
        },
        "major" : {
          "type" : "integer",
          "format" : "int64"
        },
        "medium" : {
          "type" : "integer",
          "format" : "int64"
        },
        "minor" : {
          "type" : "integer",
          "format" : "int64"
        },
        "trivial" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "title" : "VulnerabilityBySeverity"
    },
    "VulnerableEndpoint" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int64"
        },
        "method" : {
          "type" : "string"
        },
        "path" : {
          "type" : "string"
        },
        "severity" : {
          "type" : "string",
          "enum" : [ "Critical", "Major", "Minor", "Trivial", "High", "Medium", "Low" ]
        }
      },
      "title" : "VulnerableEndpoint"
    },
    "WebRequest" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "$ref" : "#/definitions/ArtifactContent",
          "originalRef" : "ArtifactContent"
        },
        "headers" : {
          "$ref" : "#/definitions/Headers",
          "originalRef" : "Headers"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "method" : {
          "type" : "string"
        },
        "parameters" : {
          "$ref" : "#/definitions/Parameters",
          "originalRef" : "Parameters"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "protocol" : {
          "type" : "string"
        },
        "target" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        }
      },
      "title" : "WebRequest"
    },
    "WebResponse" : {
      "type" : "object",
      "properties" : {
        "body" : {
          "$ref" : "#/definitions/ArtifactContent",
          "originalRef" : "ArtifactContent"
        },
        "headers" : {
          "$ref" : "#/definitions/Headers__1",
          "originalRef" : "Headers__1"
        },
        "index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "noResponseReceived" : {
          "type" : "boolean"
        },
        "properties" : {
          "$ref" : "#/definitions/PropertyBag",
          "originalRef" : "PropertyBag"
        },
        "protocol" : {
          "type" : "string"
        },
        "reasonPhrase" : {
          "type" : "string"
        },
        "statusCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "version" : {
          "type" : "string"
        }
      },
      "title" : "WebResponse"
    }
  }
}